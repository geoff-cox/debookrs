# <!-- Managed automatically by PreTeXt authoring tools -->
# (delete the above line to manage this file manually)

# Boilerplate list of files in a PreTeXt project for git to ignore
# ensure this file is tracked
!.gitignore

# don't track unpublished builds or stage (note: Runestone uses `published`)
output
published

# don't track assets generated from source
generated-assets

# don't track the executables.ptx file
executables.ptx

# don't track node packages
node_modules

# don't track error logs
.error_schema.log
logs

# don't track OS related files (windows/macos/linux)
.DS_Store
.DS_Store?
._*
.AppleDouble
.LSOverride
.Spotlight-V100
.Trashes
Icon
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
*.lnk
*.cab
*.msi
*.msix
*.msm
*.msp
[Dd]esktop.ini
.directory
.fuse_hidden*
.Trash-*
.nfs*

# Don't include VSCode generated files
.vscode
*.code-workspace

# Don't inlucde SublimeText files
# Cache files for Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# Workspace files are user-specific
*.sublime-workspace

# Project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using Sublime Text
*.sublime-project

# SFTP configuration file
sftp-config.json
sftp-config-alt*.json

# Package control specific files
Package Control.last-run
Package Control.ca-list
Package Control.ca-bundle
Package Control.system-ca-bundle
Package Control.cache/
Package Control.ca-certs/
Package Control.merged-ca-bundle
Package Control.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

# Sublime-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
GitHub.sublime-settings


# Don't include Dropbox settings and caches
.dropbox
.dropbox.attr
.dropbox.cache

# Don't track codechat config (will be generated automatically)
codechat_config.yaml

# Don't track deprecated workflows
.github/workflows/deploy.yml
.github/workflows/test-build.yml
source/c5-chat-log.md
source/chat-files/main-text.txt
source/chat-files/c1-intro.txt
source/chat-files/c1-s1-definition.txt
source/chat-files/c1-s2-components-classification.txt
source/chat-files/c1-s3-order-linearity.txt
source/chat-files/c2-intro.txt
source/chat-files/c2-s1-solution-basics.txt
source/chat-files/c2-s2-first-solution-method.txt
source/chat-files/c3-intro.txt
source/chat-files/c3-s1-separable-form.txt
source/chat-files/c3-s2-sov-method.txt
source/chat-files/c4-1-completing-the-derivative.txt
source/chat-files/c4-2-finding-the-integrating-factor.txt
source/chat-files/c4-3-if-method.txt
source/chat-files/c4-intro.txt
source/chat-files/c5-1-intro-to-lhcc-eqns.txt
source/chat-files/c5-2-solving-lhcc-eqns.txt
source/chat-files/c5-intro.txt
source/chat-files/c1-1-definition.txt
source/chat-files/c1-2-components-classification.txt
source/chat-files/c1-3-order-linearity.txt
source/chat-files/c2-1-solution-basics.txt
source/chat-files/c2-2-first-solution-method.txt
source/chat-files/c3-1-separable-form.txt
source/chat-files/c3-2-sov-method.txt
