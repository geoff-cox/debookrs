<section label="transforming-piecewise-functions">
	<title> Transforming Piecewise Functions </title>
	<introduction>
        <p>
            Up to now, you‚Äôve built a toolkit for writing messy, multi-interval functions in a single, switch-based formula using unit step functions‚Äîand you‚Äôve learned the Laplace rules that make those switches play nicely in the transform world. This is the turning point: we‚Äôre ready to transform <em>entire piecewise functions</em> into the Laplace domain, step by step, just like any other forcing term.
        </p>

        <p>
            This section is the last piece before we tackle full differential equations with piecewise forcing functions. Here, you‚Äôll see how to take a function defined in pieces, express it compactly with step functions, and then apply the Laplace transform rules you‚Äôve already learned. Once you can do that, solving an initial value problem with a ‚Äúchoppy‚Äù right-hand side becomes no more intimidating than solving one with a simple exponential.
        </p>
	</introduction>

	<paragraphs>
		<title> General Strategy </title>
		<p>
			With all three step-function transform rules in place, we can now tackle full piecewise-defined functions.  
			The strategy is always the same:
		</p>

		<assemblage xml:id="piecewise-laplace-strategy">
			<title>üìú Strategy: Laplace Transform of a Piecewise Function </title>
			<p>
				To find <m>\lap{g(t)}</m> for a piecewise function:
				<ol>
					<li><xref ref="piecewise-to-unit-step" text="custom">Write <m>g(t)</m> using step functions.</xref></li>
					<li>Combine like <m>u_c(t)</m> terms.</li>
					<li>Apply <xref ref="lt-L9" text="custom">L<m>_9</m></xref> or <xref ref="lt-L10" text="custom">L<m>_{10}</m></xref> term-by-term.</li>
				</ol>
			</p>
		</assemblage>

		<p>
			<task label="transforming-piecewise-functions-prep-1"><title> Strategy Check: Laplace for Piecewise Functions </title>
				<statement correct="yes">
					<p>
						To take the Laplace transform of a piecewise function, you should first rewrite it in terms of unit step functions.
					</p>
				</statement>
				<feedback>
					<p>
						That's the foundation of this method! Once a piecewise function is rewritten using step functions, you can apply the shift rule to each piece.
					</p>
				</feedback>
			</task>

			<task label="transforming-piecewise-functions-prep-2"><title> Matching Each Interval to the Right Form </title>
			<statement>
				<p>
					Match each type of piecewise interval to the unit step expression that activates it.
				</p>
			</statement>
			<feedback>
				<p>
				These patterns should be second nature now, this matching is what allows us to build the step-based expression for the Laplace transform.
				</p>
			</feedback>
			<cardsort>
				<match>
				<premise><m>t \lt 3</m></premise>
				<response><m>1 - u_3(t)</m></response>
				</match>
				<match>
				<premise><m>3 \le t \lt 5</m></premise>
				<response><m>u_3(t) - u_5(t)</m></response>
				</match>
				<match>
				<premise><m>t \ge 5</m></premise>
				<response><m>u_5(t)</m></response>
				</match>
				<match>
				<premise><m>0 \le t \lt 2</m></premise>
				<response><m>u_0(t) - u_2(t)</m></response>
				</match>
			</cardsort>
			</task>
		</p>
	</paragraphs>

	<paragraphs>
		<title> Piecewise Functions in the Laplace Domain </title>

		<p>
			Let's apply this strategy to the forcing function of our nmodel problem, <m>g(t)</m>:
		</p>

		<p>
			1. <xref ref="piecewise-to-unit-step" text="custom">Write <m>g(t)</m> using step functions.</xref> The pieces, intervals and switches for <m>g</m> are:
		</p>

		<tabular halign="center">
			<col right="minor"/>
			<col right="minor"/>
			<row bottom="minor"> <cell>Piece</cell> <cell>Active Interval</cell> <cell>Step Function Switch</cell> </row>
			<row> <cell><me>2t</me></cell> <cell><me>0 \le t \lt 1		 </me></cell> <cell><me>u_0(t) - u_1(t)		</me></cell> </row>
			<row> <cell><me> 3</me></cell> <cell><me>1 \le t \lt 4 </me></cell> <cell><me>u_1(t) - u_4(t)	</me></cell> </row>
			<row> <cell><me> 0</me></cell> <cell><me>t \ge 4		 </me></cell> <cell><me>u_4(t)			</me></cell> </row>
		</tabular>

		<p>
			Multiplying each piece with its switch and summing them gives:
		</p>

		<me>
			g(t) = 2t\Big(u_0(t) - u_1(t)\Big) + 3\Big(u_1(t) - u_4(t)\Big) + 0\ u_4(t)
		</me>.

		<p>
			Combine like switch terms:
		</p>

		<me>
			g(t) = 2t\ u_0(t) + (3 - 2t)\ u_1(t) - 3\ u_4(t)
		</me>.

		<p>
			Now, we are ready to find the Laplace transform of <m>g</m>. Taking the Laplace transform of both sides and using linearity, we get <m>3</m> transforms:
			<me>
				\lap{g(t)} 
				= 2\ub{\lap{t\ u_0(t)}}_{\ds\text{1Ô∏è‚É£}} 
				+ \ub{\lap{(3 - 2t)\ u_1(t)}}_{\ds\text{2Ô∏è‚É£}} 
				- 3\ub{\lap{u_4(t)}}_{\ds\text{3Ô∏è‚É£}}
			</me>.
		</p>

		<p>
				1Ô∏è‚É£ Apply <xref ref="lt-L10" text="custom">L<m>_{10}</m></xref> with: <m>\quad c=0\quad</m> &amp; <m>\quad f(t) = t \quad\Rightarrow\quad f(t+0) = t</m>:
		</p>

		<md>
			<mrow>\lap{t\cdot u_0(t)} \amp = e^{-0s}\lap{f(t+0)} = \lap{t} = \frac1{s^2} </mrow>
		</md>

		<p>
				2Ô∏è‚É£ Apply <xref ref="lt-L10" text="custom">L<m>_{10}</m></xref> with: <m>\quad c=1\quad</m> &amp; <m>\quad f(t) = 3 - 2t \quad\Rightarrow\quad f(t+1) = 1-2t</m>:
		</p>

		<md>
			<mrow>\lap{(3 - 2t)\cdot u_1(t)} \amp = e^{-s}\lap{f(t+1)} = e^{-s}\lap{1-2t} = e^{-s}\left(\frac1{s} - \frac{2}{s^2}\right)</mrow>
		</md>

		<p>
				3Ô∏è‚É£ Apply <xref ref="lt-L9" text="custom">L<m>_{9}</m></xref> with: <m>\quad c=4</m>: <m>\quad\lap{u_4(t)} = \dfrac{e^{-4s}}{s}</m>
		</p>

		<p>
			Writing these together under one sum completes the Laplace transform:
		</p>

		<md>
			<mrow>\lap{g(t)} \amp =  \frac2{s^2} + \left(\frac1{s} - \frac{2}{s^2}\right)e^{-s} - \frac{3}{s}e^{-4s} </mrow>
		</md>
	</paragraphs>

	<paragraphs>
		<title> Examples </title>
		<p>
			These worked examples illustrate how the three step-function Laplace rules combine into one powerful method for handling any piecewise function you might encounter.
		</p>
	</paragraphs>
</section>