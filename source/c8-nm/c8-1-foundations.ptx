<section><title> Foundations </title>

	<introduction>
		<p>
			Several techniques have been discussed for resolving differential equations, although they are not always simple to solve. For instance, consider the equation
			<men xml:id="riccati-eqn">
				y' = y^2 - x.
			</men>
			Though this equation may seem straightforward, the nonlinear term, <m>y^2</m>, makes solving it substantially more challenging. In fact, the solution <xref ref="riccati-eqn"/> is so complex, special functions were introduced to make it easier to represent.
			<fn>
				The solution to <xref ref="riccati-eqn"/> is described by
				<me>
					y = \frac{ 3 x \left(c_1 J_{-\frac{4}{3}} \left( x \right) - c_1 J_{\frac{2}{3}}\left( x \right) + 2 J_{-\frac{2}{3}}\left( x \right) \right) + 2 c_1 J_{-\frac{1}{3}}\left( x \right) }{ (12 x)^{2/3} \left(c_1 J_{-\frac{1}{3}} \left( x \right) + J_{\frac{1}{3}} \left(x \right) \right)}
				</me>
				where <m>J_n(x)</m> denotes a Bessel function defined as
				<me>
					J_n( x ) = \sum_{m=0}^{\infty} \frac{(-1)^m}{m! \ \Gamma(m + n + 1)}\left( \frac{i}{3} x^{\frac{3}{2}} \right)^{2m + n}.
				</me>
			</fn>
		</p>

		<p>
			The reality is that the exact solutions to many differential equations simply cannot be written in the form of a standard function. As an alternative, we can calculate a <q>substitute</q> for the actual solution. This replacement is called a numerical solution and is assumed to <q>closely resemble</q> the true solution.
		</p>

		<note><title> What do you mean by <q>closely resemble</q>? </title>
			<p>
				The statement, <q>closely resembles the true solution</q>, refers to the idea that if you were to plot both functions, their graphs would nearly coincide.
			</p>
		</note>

		<p>
			This section aims to explore the general concepts and terms used to describe the numerical methods covered in this chapter. By the end, you will have a solid grasp on many of the tools needed to implement the various algorithms that numerically solve differential equations.
		</p>
	</introduction>

	<subsection><title> What is a Numerical Solution? </title>

		<p>
			Up to this point, we've focused on finding exact solutions to differential equations. By <q>exact</q>, we mean solutions that are expressed in terms of standard mathematical functions, like <m>y(t) = e^{-3t} \sin(2t)</m>. This kind of solution is called an <term>analytic solution</term> and is sometimes referred to as a <term>closed-form solution</term> — meaning it is expressed using standard mathematical symbols and functions. These formula-like solutions are valuable because you can plug in <em>any</em> <m>t</m>-value to get the <em>exact</em> <m>y</m>-value.
		</p>

		<p>
			However, many differential equations, such as
		</p>

		<me>
			y' = e^{-y^2}, \quad y(0) = 0.
		</me>

		<p>
			do not have a nice closed-form solution. In cases like these, we turn to a different kind of tool: a <term>numerical method</term>. This approach doesn't give you a formula for <m>y(t)</m> — instead, for each specially choosen <m>t</m>-values, a numerical method computes a corresponding list of approximate <m>y</m>-values — one step at a time. We call this a <term>numerical solution</term>.
		</p>

		<paragraphs><title> Analytic vs. Numerical Solutions </title>
			
			<p>
				To grasp the difference between analytic and numerical solutions, suppose you wanted to solve the equation
			</p>

			<men xml:id="num-vs-anal-soln-eqn">
				y' = y, \quad y(0) = 1, \quad 0 \le t \le 2
			</men>

			<p>
				This equation has the formula-like analytic solution
			</p>

			<sidebyside widths="50% 8% 36% 6%" valign="middle">
				<p>
					<me>
						y(t) = e^t
					</me>,
					where any value of <m>t</m> gives the exact <m>y</m> value. For example, <m>t = 0.65</m> gives
					<me>
						y(0.65) = e^{0.65} \approx 1.915540829...
					</me>.
				</p>
				<p/>
				<p>
					<image>
						<latex-image>
							\begin{tikzpicture}[samples=50]
		
								% === colors ===
								\def\fColor{blue}			\def\fFill{\fColor!15}
								\def\gColor{green!60!black}	\def\gFill{\gColor!15}

								% === figure/domain/tick bounds ===
								\def\tmin{-0.6}	\def\tmax{2.45}
								\def\ymin{-1.8}		\def\ymax{7.5}
								\def\tticks{1, 2}
								\def\yticks{2, 4}

								% === Function definitions ===
								\newcommand{\f}[1]{e^(#1)}	\def\ftex{e^t}
								\def\a{0}	\def\b{2}
								\def\c{0.65}

								\begin{axis}[
									width=15cm, height=7cm, scale=0.35,
									xlabel={$t$}, ylabel={$y$},
									title={Analytic Solution},
									title style={font=\small},
									grid=none,
									tick style={thick},
									line width=1pt,
									axis lines=middle,
									xtick distance=1, ytick distance=4,
									minor x tick num=1, minor y tick num=1,
									xmin=\tmin, xmax=\tmax, ymin=\ymin, ymax=\ymax,
								]
								
									% Read and plot data from file
									\addplot [domain=\a:\b, \fColor] {e^x};
									\draw[gray, thin]	(\b, 0) -- (\b, {\f{\b}});
									

									\draw[dashed, thick]	(\c, {\f{\c}}) -- (\c, 0);
									\draw[dashed, thick]	(\c, {\f{\c}}) -- (0, {\f{\c}});
									\node[below, font=\small] at (\c, 0) {\c};
									\node[left, font=\small] at (0,{\f{\c}}) {$1.916$};

									% === Labels ===
									\node[\fColor, font=\large, above] at (1.5, 5) {$\ftex$};

								\end{axis}

							\end{tikzpicture}
						</latex-image>
					</image>
				</p>
				<p/>
			</sidebyside>

			<p>
				Equation <xref ref="num-vs-anal-soln-eqn"/> also has a table-like numerical solution:
			</p>

			<sidebyside widths="40% 18% 36% 6%" valign="middle">
				<p>
					<tabular halign="center">
						<col right="minor" />
						<row bottom="minor"><cell><m>t</m></cell><cell><m>y(t)</m> (approx)</cell></row>
						<row><cell>0.00</cell><cell>1.0000</cell></row>
						<row><cell>0.25</cell><cell>1.2500</cell></row>
						<row><cell>0.50</cell><cell>1.5625</cell></row>
						<row><cell>0.75</cell><cell>1.9531</cell></row>
						<row><cell>…</cell><cell>…</cell></row>
					</tabular>
				</p>
				<p>
					<line>Plot the</line>
					<line>points <m>\rightarrow</m></line>
				</p>
				<p>
					<image>
						<latex-image>
							\begin{tikzpicture}[samples=50]
		
								% === colors ===
								\def\fColor{blue}			\def\fFill{\fColor!15}
								\def\gColor{green!60!black}	\def\gFill{\gColor!15}

								% === figure/domain/tick bounds ===
								\def\tmin{-0.6}	\def\tmax{2.45}
								\def\ymin{-1.8}		\def\ymax{7.5}
								\def\tticks{1, 2}
								\def\yticks{2, 4}

								% === Function definitions ===
								\newcommand{\f}[1]{e^(#1)}	\def\ftex{e^t}
								\def\a{0}	\def\b{2}
								\def\c{1.13}

								\begin{axis}[
									width=15cm, height=7cm, scale=0.35,
									xlabel={$t$}, ylabel={$y$},
									title={Numerical Solution},
									title style={font=\small},
									grid=none,
									tick style={thick},
									line width=1pt,
									axis lines=middle,
									xtick distance=1, ytick distance=4,
									minor x tick num=3, minor y tick num=1,
									xmin=\tmin, xmax=\tmax, ymin=\ymin, ymax=\ymax,
								]
								
									% Read and plot data from file
									\addplot [only marks, mark=o] table[x=t, y=yA, col sep=comma] {external/code/data-generator/outputs/example-2/euler_example-2.csv};
									\draw[gray, thin]	(\b, 0) -- (\b, 5.7);
								\end{axis}
							\end{tikzpicture}
						</latex-image>
					</image>
				</p>
				<p/>
			</sidebyside>

			<exercise><title>Recognizing a Numerical Solution</title>
				<statement>
					When you say you have found a <q>numerical solution</q> to an initial value problem, what did you find?
				</statement>
				<choices randomize="yes">
					<choice correct="yes">
						<statement>
							A list of values approximating <m>y(t)</m> at specific times
						</statement>
						<feedback>
							Correct — a numerical solution gives you approximate values of <m>y(t)</m> at specific <m>t</m>-values. You don't get a formula, you get a table.
						</feedback>
					</choice>
					<choice>
						<statement>
							A formula expressing <m>y(t)</m> using functions like <m>\sin t</m> or <m>e^t</m>
						</statement>
						<feedback>
							No, this describes an analytic solution.
						</feedback>
					</choice>
					<choice>
						<statement>
							An exact solution valid for all <m>t</m>
						</statement>
						<feedback>
							No, this describes an analytic solution.
						</feedback>
					</choice>
					<choice>
						<statement>
							A graph showing all possible solutions
						</statement>
						<feedback>
							No, this describes a graph of a family of analytic solutions.
						</feedback>
					</choice>
				</choices>
			</exercise>

			<p>
				Graphically, the analytic solution <m>y(t)=e^t</m> is represented by a continuous curve, while the numerical solution is a collection of points. And unlike analytic methods, numerical methods work even when no formula exists.
			</p>

			<table><title> Analytic vs. Numerical Solution Summary </title>
				<tabular halign="center">
					<col width="30%" right="minor" />
					<col width="30%" right="minor" />
					<col width="30%" right="minor" />
					<row bottom="minor">
						<cell/>
						<cell><p> <m>\textbf{Analytic Solutions}</m> </p></cell>
						<cell><p> <m>\textbf{Numerical Solutions}</m> </p></cell>
					</row>
					<row>
						<cell><p> <m>\textbf{Also Known As}</m> </p></cell>
						<cell><p> Closed-form solutions </p></cell>
						<cell><p> Approximate solutions </p></cell>
					</row>
					<row>
						<cell><p> <m>\textbf{Looks Like}</m> </p></cell>
						<cell><p> <m>y = </m> formula in <m>t</m> </p></cell>
						<cell><p> Table of <m>t</m> &amp; <m>y</m> values </p></cell>
					</row>
					<row>
						<cell><p> <m>\textbf{Solution Values}</m> </p></cell>
						<cell><p> Exact </p></cell>
						<cell><p> Approximate </p></cell>
					</row>
					<row bottom="minor">
						<cell><p> <m>\textbf{Solution Graph}</m> </p></cell>
						<cell><p> Curve </p></cell>
						<cell><p> Points </p></cell>
					</row>
				</tabular>
			</table>

		</paragraphs>

		<exercise><title>Analytic Solution, AKA …</title>
			<statement>
				What is another name for an analytic solution?
			</statement>
			<choices randomize="yes">
				<choice correct="yes">
					<statement>
						Closed-form solution
					</statement>
					<feedback>
						Yes — a closed-form solution is another name for an analytic solution.
					</feedback>
				</choice>
				<choice>
					<statement>
						Approximate solution
					</statement>
					<feedback>
						No — an approximate solution refers to a numerical solution.
					</feedback>
				</choice>
				<choice>
					<statement>
						Continuous solution
					</statement>
					<feedback>
						Not all analytic solutions are continuous — and not all continuous solutions are analytic.
					</feedback>
				</choice>
				<choice>
					<statement>
						Systematic solution
					</statement>
					<feedback>
						While you may solve analytically using a systematic process, this is not a name for an analytic solution.
					</feedback>
				</choice>
			</choices>
			<feedback>
				Analytic means a symbolic expression using functions, not a numerical approximation or a rule.
			</feedback>
		</exercise>

		<paragraphs><title> Why Do We Need Numerical Methods? </title>
			<p>
				After comparing the two types of solutions, it might seem like analytic solutions are always better than numerical ones. However, even when a closed-form solution exists, there are many reasons why numerical methods are useful — and often preferred. Here are just a few:
			</p>

			<ol>
				<li>A closed-form solution may be very difficult or even impossible to find.</li>
				<li>Outside of an academic setting, it is rare to solve a differential equation by hand.</li>
				<li>In real-world applications, solving an equation is typically just one step in a larger computational pipeline.</li>
				<li>Numerical methods are easier to adjust when your equation or parameters change.</li>
			</ol>

			<exercise><title>Why use numerical methods?</title>
				<statement>
					Which of the following are good reasons to use a numerical method?
				</statement>
				<choices randomize="yes" select="multiple">
					<choice correct="yes">
						<statement>
							They can approximate a solution when no closed-form solution exists.
						</statement>
						<feedback>
							This is True — numerical methods are often the only way to find a solution when no closed-form solution exists.
						</feedback>
					</choice>
					<choice correct="yes">
						<statement>
							They can be automated on a computer.
						</statement>
						<feedback>
							This is True — numerical methods are ideal for computer-based simulation and analysis.
						</feedback>
					</choice>
					<choice correct="yes">
						<statement>
							They are easier to adjust when the form of the equation changes.
						</statement>
						<feedback>
							This is True — they are often more flexible and adaptable than symbolic techniques.
						</feedback>
					</choice>
					<choice>
						<statement>
							They take less time to compute.
						</statement>
						<feedback>
							This is not necessarily true — Closed-form solutions may be easy to find depending on the equation. Unless you have already setup a computer to solve an equation numerically, a numerical method has a significant initial investment.
						</feedback>
					</choice>
					<choice>
						<statement>
							They produce more accurate solutions than analytic methods.
						</statement>
						<feedback>
							This is not true — In fact, it is likely the biggest drawback of numerical methods. Since numerical solutions are approximations, they always introduce some amount of error (albeit, usually very small). Analytic solutions, on the other hand, are exact when they exist.
						</feedback>
					</choice>
				</choices>
			</exercise>
		</paragraphs>

	</subsection>

	<subsection><title> Approximating Solutions Step by Step </title>

		<p>
			In this section, we'll build intuition for the most common kind of numerical method — one that approximates the solution to an initial value problem by computing values of <m>y(t)</m> one step at a time. It might feel a little strange at first, but you're not solving the entire equation at once. Instead, you're just walking forward from one point to the next, building a trail of approximate values as you go.
		</p>

		<p>
			To give you an idea of how some of these methods work, imagine you are hiking through the woods in the fog from point <m>A</m> to <m>B</m>. Assuming there exists a best possible path, can you approximate if you only knew the information below?
			<ul>
				<li>
					<p>
						Your current position.
					</p>
				</li>
				<li>
					<p>
						The direction you should go from your current position.
					</p>
				</li>
			</ul>
		</p>

		<p>
			To make progress from point <m>A</m>, you walk in a direction for some time, then stop, note your current position and recalculate the new direction to walk. You repeat this process until, ideally, you are somewhere near point <m>B</m>.
		</p>

		<p>
			In this analogy, the solution you are trying to approximate is the best possible path from point <m>A</m> to <m>B</m>. The approximation is the collection of current positions (starting with <m>A</m>) you noted when you stopped to update your direction. This systematic process is precisely how some numerical methods work.
		</p>

		<exercise><title> What's the Tradeoff </title>
			<statement>
				<p>
					In the previous analogy, what trade-off do you think exists when approximating the best possible path?
				</p>
			</statement>
			<choices randomize="yes">
				<choice correct="yes">
					<statement>
						The more often you stop to recalculate your position, the more accurate your approximation, but the longer it takes.
					</statement>
					<feedback>
						Correct — stopping more often gives you a better approximation, but it also takes more time.
					</feedback>
				</choice>
				<choice>
					<statement>
						The less often you stop, the more accurate your approximation.
					</statement>
					<feedback>
						This is not true — stopping less often leads to a less accurate approximation.
					</feedback>
				</choice>
				<choice>
					<statement>
						The more often you stop, the less accurate your approximation.
					</statement>
					<feedback>
						This is not true — stopping more often leads to a more accurate approximation.
					</feedback>
				</choice>
				<choice>
					<statement>
						The direction you choose does not affect the accuracy of your approximation.
					</statement>
					<feedback>
						This is not true — the direction you choose is crucial for making progress toward the best path.
					</feedback>
				</choice>
			</choices>
		</exercise>

		<paragraphs><title> Selecting the Approximation Locations </title>
			
			<p>
				Numerical methods often start the same way—select the <m>t</m>-values where you want the approximate solution. The <m>t</m>-values that you can choose from are determined by an interval of time specified in the problem. For example, in the equation 
			</p>

			<me>
				y' = y, \quad y(0) = 1, \quad 0 \le t \le 2
			</me>,
			
			<p>
				the interval, <m>0 \le t \le 2</m>, indicates that we should only choose <m>t</m>-values between <m>0</m> and <m>2</m>. Typically, we divide the time interval into evenly spaced points, such as For example,
			</p>

			<mdn>
				<mrow xml:id="t-values-N-eq-2"> \amp t = 0,\ 1,\ 2 </mrow>
				<mrow xml:id="t-values-N-eq-4"> \amp t = 0,\ 0.5,\ 1,\ 1.5,\ 2 </mrow>
				<mrow xml:id="t-values-N-eq-8"> \amp t = 0,\ 0.25,\ 0.5,\ 0.75,\ 1,\ 1.25,\ 1.5,\ 1.75,\ 2 </mrow>
				<mrow xml:id="t-values-N-eq-k"> \amp t = 0,\ 0.01,\ 0.02,\ 0.03,\ \ldots\ ,\ 1.98,\ 1.99,\ 2 </mrow>
			</mdn>

			<!-- <p>
				Each of these selections is called a <term>partition</term> of the interval <m>[0, 2]</m>. The partition divides the time interval into smaller segments where each approximation will occur. 
			</p> -->
				
			<p>
				The common distance between the <m>t</m>-values in each selection is known as the <term>step size</term>, denoted by <m>h</m>. For example, <m>h = 0.5</m> for selection <xref ref="t-values-N-eq-4"/> and <m>h = 0.01</m> for selection <xref ref="t-values-N-eq-k"/>. 
			</p>

			<exercise><title> What is the Step Size? </title>
				<statement>
					<p>
						What is the step size <m>h</m> for the selection of <m>t</m>-values in <xref ref="t-values-N-eq-8"/>?
					</p>
				</statement>
				<choices randomize="yes">
					<choice correct="yes">
						<statement>
							0.25
						</statement>
						<feedback>
							Correct — the step size is the distance between each <m>t</m>-value, which is <m>0.25</m> in this case.
						</feedback>
					</choice>
					<choice>
						<statement>
							0.5
						</statement>
						<feedback>
							This is not correct — the step size is the distance between each <m>t</m>-value.
						</feedback>
					</choice>
					<choice>
						<statement>
							0.1
						</statement>
						<feedback>
							This is not correct — the step size is the distance between each <m>t</m>-value.
						</feedback>
					</choice>
					<choice>
						<statement>
							It depends on the problem.
						</statement>
						<feedback>
							This is not correct — the step size is the distance between each <m>t</m>-value.
						</feedback>
					</choice>
				</choices>
			</exercise>

			<p>
				Since each approximation happens in a specific order, it is helpful to assign each <m>t</m>-value a number corresponding to this order (i.e., an index) starting from <m>0</m>. For example, selection <xref ref="t-values-N-eq-4"/> can be indexed as follows: 
			</p>

			<tabular halign="center">
				<row>
					<cell colspan = "10"> Index Labeling for selection <xref ref="t-values-N-eq-8"/> (<m>h=0.25</m>) </cell>
				</row>
				<row>
					<cell>0</cell>
					<cell>0.25</cell>
					<cell>0.5</cell>
					<cell>0.75</cell>
					<cell>1</cell>
					<cell>1.25</cell>
					<cell>1.5</cell>
					<cell>1.75</cell>
					<cell>2</cell>
				</row>
				<row>
					<cell><m>t_0</m></cell>
					<cell><m>t_1</m></cell>
					<cell><m>t_2</m></cell>
					<cell><m>t_3</m></cell>
					<cell><m>t_4</m></cell>
					<cell><m>t_5</m></cell>
					<cell><m>t_6</m></cell>
					<cell><m>t_7</m></cell>
					<cell><m>t_8</m></cell>
				</row>
			</tabular>

			<exercise label="chkpt-3-t-list"><title> List the <m>t</m>-Values </title>
				<statement>
					<p>
						Suppose you want to approximate a solution on the interval <m>[0, 2]</m> using a step size of <m>h = 0.4</m>. List the <m>t</m>-values you would use.
					</p>

					<tabular halign="center">
						<row>
							<cell><m>0</m></cell>
							<cell><fillin width="3" mode="string" answer="0.4" /></cell>
							<cell><fillin width="3" mode="string" answer="0.8" /></cell>
							<cell><fillin width="3" mode="string" answer="1.2" /></cell>
							<cell><fillin width="3" mode="string" answer="1.6" /></cell>
							<cell><m>2</m></cell>
						</row>
						<row>
							<cell><m>t_0</m></cell>
							<cell><m>t_1</m></cell>
							<cell><m>t_2</m></cell>
							<cell><m>t_3</m></cell>
							<cell><m>t_4</m></cell>
							<cell><m>t_5</m></cell>
						</row>
					</tabular>
				</statement>
				<evaluation>
					<evaluate><test correct="yes"><jscmp>ans == 0.4</jscmp></test></evaluate>
					<evaluate><test correct="yes"><jscmp>ans == 0.8</jscmp></test></evaluate>
					<evaluate><test correct="yes"><jscmp>ans == 1.2</jscmp></test></evaluate>
					<evaluate><test correct="yes"><jscmp>ans == 1.6</jscmp></test></evaluate>
				</evaluation>
			</exercise>

			<p>
				Since each <m>t</m>-value is separated by the step size, we can express each <m>t</m>-value in terms of the previous one:
			</p>

			<me>
				t_1 = t_0 + h, \quad t_2 = t_1 + h, \quad t_3 = t_2 + h, \quad \ldots\ , \quad t_N = t_{N-1} + h.
			</me>

			<sidebyside width="80%">	
				<figure xml:id="t-values-separated-by-h"><caption> Each <m>t</m>-value is separated by the step size, <m>h</m> </caption>
					<image width="100%">
						<latex-image>
							\begin{tikzpicture}[samples=50, scale=3.5]
								% === figure/domain/tick bounds ===
								\def\tmin{-0.2}		\def\tmax{2.9}
								\def\ymin{-0.9}		\def\ymax{0.9}
								\def\tks{0.25, 0.5, 1.75, 2}
								\def\h{0.4}		\def\hy{-0.18}	\def\hpad{0.05}
								
								\def\bpad{0.008}
								\def\ticklength{0.02}
								\def\barlength{0.05}
								
								% === Axes ===
								\draw[thick, -&gt;] (\tmin, 0) -- (\tmax, 0);
								\node[below] at (\tmax - 0.1, 0) {$t$};

								% === Tick marks/numeric labels ===
								\def\tks{0.4, 0.8, 1.2, 1.6}

								\def\k{0}	\def\tk{0}
								\draw[gray, thick]	(\tk , \ticklength) -- (\tk , -\ticklength);
								\node[below] at (\tk, 0) {$t_{\k}$};
								\draw[black]	(\tk , {\hy - \barlength}) -- (\tk , {\hy + \barlength});

								\foreach \tk [count=\k from 1] in \tks {
									\draw[gray, thick]	(\tk , \ticklength) -- (\tk , -\ticklength);
									\node[below] at (\tk, 0) {$t_{\k}$};
									\draw[black]	(\tk , {\hy - \barlength}) -- (\tk , {\hy + \barlength});
									% === h arrows ===
									\draw[black, thick, &lt;-]	({\tk - \h + \bpad}, \hy) -- ({\tk - 0.5*\h - \hpad} , \hy);
									\node[font=\small] at ({\tk - 0.5*\h}, \hy) {$h$};	
									\draw[black, thick, -&gt;]	({\tk - 0.5*\h + \hpad}, \hy) -- ({\tk - \bpad} , \hy);
								}

								\def\k{}	\def\tk{1.9}
								\node[below] at (\tk, -0.08) {$\ldots$};
								
								\def\k{N-1}	\def\tk{2.2}
								\draw[gray, thick]	(\tk , \ticklength) -- (\tk , -\ticklength);
								\node[below] at (\tk, 0) {$t_{\k}$};
								\draw[black]	(\tk , {\hy - \barlength}) -- (\tk , {\hy + \barlength});

								\def\k{N}	\def\tk{2.6}
								\draw[gray, thick]	(\tk , \ticklength) -- (\tk , -\ticklength);
								\node[below] at (\tk, 0) {$t_{\k}$};
								\draw[black]	(\tk , {\hy - \barlength}) -- (\tk , {\hy + \barlength});
								% === h arrows ===
								\draw[black, thick, &lt;-]	({\tk - \h + \bpad}, \hy) -- ({\tk - 0.5*\h - \hpad} , \hy);
								\node[font=\small] at ({\tk - 0.5*\h}, \hy) {$h$};	
								\draw[black, thick, -&gt;]	({\tk - 0.5*\h + \hpad}, \hy) -- ({\tk - \bpad} , \hy);

							\end{tikzpicture}
						</latex-image>
					</image>
				</figure>
			</sidebyside>

			<p>
				Additionally, <xref ref="t-values-separated-by-h"/> clearly shows how each <m>t</m>-value is some number of steps, <m>h</m>, to the right of <m>t_0</m>. In particular, we can :
			</p>

			<ul>
				<li>
					<p>
						<m>t_1</m> is <m>1\ h</m> step to the right of <m>t_0</m>, so <m>t_1 = t_0 + h</m>,
					</p>
				</li>
				<li>
					<p>
						<m>t_2</m> is <m>2\ h</m> steps to the right of <m>t_0</m>, so <m>t_2 = t_0 + 2h</m>,
					</p>
				</li>
				<li>
					<p>
						<m>t_3</m> is <m>3\ h</m> steps to the right of <m>t_0</m>, so <m>t_3 = t_0 + 3h</m>,
					</p>
				</li>
				<li>
					<p>
						<m>t_4</m> is <m>4\ h</m> steps to the right of <m>t_0</m>, so <m>t_4 = t_0 + 4h</m>, and so on.
					</p>
				</li>
			</ul>

			<p>
				In general, we can express the <m>k</m>-th <m>t</m>-value as:
			</p>

			<me>
				t_k = t_0 + k \cdot h
			</me>


			<exercise label="chkpt-3-t-pattern"><title> How many <m>h</m>'s Away? </title>
				<statement>
					<p>
						The distance between each <m>t</m>-value is the <term>step size</term>, <m>h</m>. Fill in the blanks with the number of <m>h</m>'s you need to add to <m>t_0</m> to get to each <m>t</m>-value. 
					</p>

					<p>
						<sidebyside widths="30% 30%" margin="20%">
							<p>
								A. <m>\quad t_1 = t_0\ + </m> <fillin width="1" mode="string" answer="1" /> <m>h</m>
							</p>
							<p>
								B. <m>\quad t_{16} = t_0\ + </m> <fillin width="1" mode="string" answer="16" /> <m>h</m>
							</p>
						</sidebyside>
					</p>
					<p>
						<sidebyside widths="30% 30%" margin="20%">
							<p>
								C. <m>\quad t_5 = t_3\ + </m> <fillin width="1" mode="string" answer="2" /> <m>h</m>
							</p>
							<p>
								D. <m>\quad t_k = t_0\ + </m> <fillin width="1" mode="string" answer="k" /> <m>h</m>
							</p>
						</sidebyside>
					</p>
					
				</statement>
				<evaluation>
					<evaluate><test correct="yes"><jscmp>ans == 1</jscmp></test></evaluate>
					<evaluate><test correct="yes"><jscmp>ans == 16</jscmp></test></evaluate>
					<evaluate>
						<test correct="yes">
							<jscmp>ans == 2</jscmp>
						</test>
						<test correct="no">
							<jscmp>ans != 2</jscmp>
							<feedback>Look carefully at the index of both <m>t</m>-values.</feedback>
						</test>
					</evaluate>
					<evaluate><test><strcmp use-answer="yes" /></test></evaluate>
				</evaluation>
			</exercise>

		</paragraphs>

		<paragraphs><title> Finding Each Approximation, One-By-One </title>
			<p>
				Once you have selected the <m>t</m>-values, the next step is to find the corresponding <m>y(t)</m>-values. This is done by using the differential equation to compute each value one at a time, starting from the initial condition.
			</p>
		</paragraphs>

		<paragraphs><title> Improving Approximations </title>
			<p>
				The choice of step size <m>h</m> is important. A smaller <m>h</m> generally leads to better accuracy because each step tracks the curve more closely — but it also means you need more steps to reach your destination. Larger values of <m>h</m> are faster, but less accurate and may introduce noticeable errors.
			</p>

			<example><title>Different Step Sizes</title>
				<statement>
					Suppose you're solving <m>y' = y</m>, <m>y(0) = 1</m> over the interval <m>[0, 1]</m> using a step-based method. If <m>h = 0.25</m>, you’ll get just 4 steps: at <m>t = 0, 0.25, 0.5, 0.75, 1.0</m>. If <m>h = 0.05</m>, you’ll get 20 steps — and likely a more accurate approximation.
				</statement>
				<solution>
					<p>
						With fewer steps, your estimate might drift away from the true curve more quickly. Smaller steps track the curve better, but they also require more computation. This tradeoff between accuracy and effort is central to numerical methods.
					</p>
				</solution>
			</example>

			<exercise><title>Step Size Intuition</title>
				<statement>
					What is the effect of decreasing the step size <m>h</m> in a step-based numerical method?
				</statement>
				<choices randomize="yes">
					<choice correct="yes">
						<statement>
							It generally improves accuracy but increases computational cost.
						</statement>
						<feedback>
							Correct — smaller steps follow the solution more closely, but take more steps to cover the interval.
						</feedback>
					</choice>
					<choice>
						<statement>
							It always gives the exact solution.
						</statement>
						<feedback>
							No — smaller steps improve accuracy, but the solution is still approximate.
						</feedback>
					</choice>
					<choice>
						<statement>
							It makes the method faster but less accurate.
						</statement>
						<feedback>
							No — smaller steps actually slow the computation down.
						</feedback>
					</choice>
					<choice>
						<statement>
							It has no effect on the outcome.
						</statement>
						<feedback>
							No — step size is a key parameter in numerical methods.
						</feedback>
					</choice>
				</choices>
			</exercise>
		</paragraphs>

		<note><title>Not all numerical methods work step by step</title>
			<p>
				Some numerical methods — especially for boundary value problems — construct an entire system of equations and solve them all at once, rather than marching forward step by step. But in this chapter, we’ll focus on <q>initial value problems</q> where step-based methods are common, intuitive, and highly effective.
			</p>
		</note>

	</subsection>

	<subsection><title> Derivative Approximation </title>

		<objectives>
			<introduction>
				<p>
					This section covers ...
				</p>
			</introduction>
			<ol>
				<li> definition of the derivative </li>
				<li> derivative as the slope of the tangent line </li>
				<li> approximating the slope of a tangent line with the slope of a secant line </li>
				<li> approximating <m>y'(x_0)</m> </li>
				<li> approximating <m>y(x_1)</m> given <m>y(x_0)</m> and <m>y'(x_0)</m> </li>
			</ol>
		</objectives>

		<paragraphs><title> Definition of Derivative </title>

			<p>
				<me>
					y'(x) = \lim_{h \to 0} \frac{y(x+h) - y(x)}{h} \approx \frac{y(x + 0.1) - y(x)}{0.1}
				</me>
				<me>
					y'(0) \approx \frac{y(0 + 0.1) - y(0)}{0.1} = \frac{y(0.1) - y(0)}{0.1}
				</me>
			</p>

		</paragraphs>

		<example xml:id="euler-example-00">
		
			<statement>
				<p>
					Suppose you knew <m>y(0) = 1</m> and <m>y'(0) = 2</m>.
				</p>
				<p>
					Could you approximate <m>y(1)</m> without knowing anything about <m>y(x)</m>?
				</p>
				<!-- <image>

					<latex-image>

						\begin{tikzpicture}
							\begin{axis}[
								axis x line=center,
								axis y line=center,
								xtick={-3,-2,...,2},
								ytick={-4,-3,...,5},
								xlabel={$x$},
								ylabel={$y$},
								xlabel style={below right},
								ylabel style={above left},
								xmin = -2.5,
								xmax = 2.5,
								ymin = -1.5,
								ymax = 3.5]
								
								\addplot[only marks]coordinates{
									(0,1)
									(1,1.8750)
									(1,2)
								};

								\addplot[domain=-5:5, orange, thick, smooth, dashed] {x + 1};
								\addplot[domain=-5:5, blue, thick, smooth] {-1/8*x^3 + x + 1};

							\end{axis}


						

						\end{tikzpicture}

					</latex-image>

				</image> -->
			</statement>

			<solution>
				<p>
					Fuck off!
				</p>
			</solution>

		</example>

		<figure xml:id="figure-quadratic-slope">
			<caption>Finding the Tangent Line of a Quadratic Function</caption>

			<interactive xml:id="interactive-quadratic-tangent" platform="jsxgraph" width="80%">
				<slate xml:id="quadratic-tangent-plot" surface="jessiecode" axis="true" grid="false">
					
					a = 0.25;
					b = 0;
					c = -1;

					fGraph = functiongraph(function(x) {
						return a*x^2 + b*x + c;
					});

					P = glider(1,0, fGraph);
					Q = point(2,2)
					&lt;&lt;
						name: "Q",
						snapSizeX: 0.5,
						snapSizeY: 0.5,
						snapToGrid: true	
					&gt;&gt;;

					secant = line(P,Q)

					&lt;&lt;
						color: (
							function() {
								m = (Q.Y() - P.Y())/(Q.X() - P.X());
								dydx = 2*a*P.X() + b;
								cVal = "red";
								if (abs(m-dydx) &lt; 0.01) { cVal = "blue"; }

								return cVal;
							})
					&gt;&gt;;

					dydxValue = text(-4, 1.5,
						function() {
							m = 2*a*P.X() + b;
							return ("dy/dx = " + trunc(m,3));
						})

					&lt;&lt; frozen: true &gt;&gt;;

					mValue = text(-4, 1,
						function() {
							m = (Q.Y() - P.Y())/(Q.X() - P.X());
							return ("m = " + trunc(m,3));
						})

					&lt;&lt; frozen: true &gt;&gt;;
				</slate>

				<instructions>
					<p>
						Use the sliders to set the parameters of the quadratic <m>f(x)=ax^2+bx+c</m>.
						Drag the point <m>A</m> on the graph and the point <m>P</m> to define a line.
						Try to make the line tangent at the point at <m>A</m> and observe the resulting slope of the tangent line.
					</p>
				</instructions>
			</interactive>
		</figure>

	</subsection>

	<subsection><title> Solution Approximation </title>

		<objectives>
			<introduction>
				<p>
					This section covers ...
				</p>
			</introduction>
			<ol>
				<li> Analytical vs Numerical Solutions </li>
				<li> What are you finding when you compute a numerical solution </li>
			</ol>
		</objectives>

		<p>
			Up to this point, we have explored various strategies for solving differential equations. For instance, applying the separation of variables or integrating factor methods to the equation
			<me>
				y' - 4xy = 0, \, y(0) = 2
			</me>
			yields the solution <m>y(x) = 2e^{x^2}</m>. This type of solution, expressible as an explicit function, is known as an analytical solution<fn>Also referred to as a closed-form solution.</fn>. Analytical solutions provide exact expressions of the system's behavior and are ideal when they can be found. However, many real-world problems yield differential equations too complex for analytical solutions, paving the way for numerical approximations.
		</p>

		<p>
			To introduce the concept of a numerical solution, let's plot the analytical solution <m>y = 2e^{-x^2}</m>.
		</p>

		<p>
			Numerical methods for differential equations involve computing a discrete set of points approximating theoretical, often unknowable, analytical solution. This process enables us to sketch a piecewise linear or nonlinear path mimicking the exact solution's curve.
			<sidebyside widths="75%" margins="auto" valign="middle">
				<figure xml:id="analytical-vs-numerical-soln">
				<title> Comparative Visualization of Analytical and Numerical Solutions </title>
					<!-- <image source="figures/approx-fig-02_black_x.png">
						<shortdescription>(True Solution vs. Numerical Approximation)</shortdescription>
					</image> -->
				</figure>
			</sidebyside>
		</p>

		<p>
			This shift towards numerical approximation is not just a workaround but a powerful approach that expands our capacity to solve differential equations arising in complex systems where exact solutions are not readily derivable. Euler's method, as we will see, is the entry point into this expansive field of computational mathematics, demonstrating how straightforward concepts can approximate solutions to complex problems.
		</p>

		<image width="70%">
			<latex-image>
				\begin{tikzpicture}

					% Define the start and end of the interval
					\def\a{0} % Start of the interval
					\def\b{5} % End of the interval
					\def\N{5} % Number of partitions

					% Draw the x-axis
					\draw[-&gt;,thick] (\a-0.5,0) -- (\b+1,0) node[right] {$x$};

					% Calculate step size
					\pgfmathsetmacro{\h}{(\b-\a)/\N}

					% Draw the partition points and labels
					\draw (\a + 0*\h,0.1) -- (\a + 0*\h,-0.1) node[below] {$x_{0}$};
					\draw (\a + 1*\h,0.1) -- (\a + 1*\h,-0.1) node[below] {$x_{1}$};
					\draw (\a + 2*\h,0.1) -- (\a + 2*\h,-0.1) node[below] {$x_{2}$};
					\draw 							(\a + 3*\h,-0.1) node[below] {$\ldots$};
					\draw (\a + 4*\h,0.1) -- (\a + 4*\h,-0.1) node[below] {$x_{N-1}$};
					\draw (\a + 5*\h,0.1) -- (\a + 5*\h,-0.1) node[below] {$x_{N}$};
					
					% Optionally, add labels for a and b
					\node[below] at (\a,-0.35) {$\uparrow$};
					\node[below] at (\a,-0.7) {$a$};
					\node[below] at (\b,-0.35) {$\uparrow$};
					\node[below] at (\b,-0.7) {$b$};

					% Add the label for each h
					\draw 			(\a + 0*\h,0.3) -- (\a + 0*\h,0.5);
					\draw[&lt;-]	(\a + 0*\h,0.4) -- (\a + 0.38*\h,0.4);
					c
					\draw[-&gt;] 	(\a + 0.62*\h,0.4) -- (\a + 1*\h,0.4);
					\draw 			(\a + 1*\h,0.3) -- (\a + 1*\h,0.5);

					\draw[&lt;-] 	(\a + 1*\h,0.4) -- (\a + 1.38*\h,0.4);
					\draw 			(\a + 1.5*\h,0.2) node[above] {$h$};
					\draw[-&gt;] 	(\a + 1.62*\h,0.4) -- (\a + 2*\h,0.4);
					\draw 			(\a + 2*\h,0.3) -- (\a + 2*\h,0.5);

					\draw 			(\a + 4*\h,0.3) -- (\a + 4*\h,0.5);
					\draw[&lt;-] 	(\a + 4*\h,0.4) -- (\a + 4.38*\h,0.4);
					\draw 			(\a + 4.5*\h,0.2) node[above] {$h$};
					\draw[-&gt;] 	(\a + 4.62*\h,0.4) -- (\a + 5*\h,0.4);
					\draw 			(\a + 5*\h,0.3) -- (\a + 5*\h,0.5);
					
				\end{tikzpicture}
			</latex-image>
		</image>

		<p>
			
			<!-- <image xml:id="fuckit">

				<latex-image>
					\begin{tikzpicture}
						
						\begin{axis}[
							xlabel={$t$},
							ylabel={$y$},
							title={Solution of $y' + 4xy = 0$ using Euler's Method},
							grid=both,
							minor tick num=1,
							axis lines=middle,
						]
						
							% Read and plot data from file
							\addplot [only marks, mark=o] table[x=x, y=y, col sep=comma] {external/data/euler-data-02.csv};
							\addplot [domain=0:2, samples=50, black] {2*e^(-x^2)};
						\end{axis}
						
					\end{tikzpicture}
				</latex-image>

			</image> -->

		</p>

		<p>

			<image>
				<latex-image>
				
					\begin{tikzpicture}
					
						set table  "../plots/pgfmanual-sine.table"
						set format "%.5f"
						set samples 20
						plot [x=0:10] sin(x)
						
						\begin{axis}[]
							% Draw the x-axis
							\draw[-&gt;,thick] (-1.5,0) -- (8,0) node[right] {$x$};
							\draw[-&gt;,thick] (0,-1.5) -- (0,1) node[right] {$y$};

							\addplot[
								samples at={0,0.5,1,1.5,2,2.5,3,3.5,4,4.5},
								&lt;-&gt;,
								smooth,
								thick,
								color = blue,
								mark = ball,
							]{x*e^(-0.5*x^2)};

							
							\addplot[
								samples at={0,0.5,1,1.5,2,2.5,3,3.5,4,4.5},
								&lt;-&gt;,
								smooth,
								thick,
								color = orange,
								mark = +,
							]{x*e^(-0.5*x^2) - 0.05*x};

							
							\addplot[
								only marks, mark size=1.5pt
							]coordinates{
								(0.0, 0.0000)
								(0.5, 0.2438)
								(1.0, 0.4524)
								(1.5, 0.5989)
								(2.0, 0.6703)
								(2.5, 0.6691)
								(3.0, 0.6099)
								(3.5, 0.5141)
								(4.0, 0.4038)
								(4.5, 0.2970)
							};
							\addplot[
								only marks, mark size=2.0pt, mark = +, color = orange,
							]coordinates{
								(0.0, 0.0000)
								(0.5, 0.24)
								(1.0, 0.44)
								(1.5, 0.54)
								(2.0, 0.62)
								(2.5, 0.60)
								(3.0, 0.55)
								(3.5, 0.51)
								(4.0, 0.46)
								(4.5, 0.34)
							};
							\draw (4.5, 0.34) node[above] {$\hat{y}_7$};
						\end{axis}
					\end{tikzpicture}
				</latex-image>
			</image>

			<image xml:id="pgfplots-shit1">
				<latex-image>

					\pgfplotstablenew[
						create on use/plot1/.style={
							create col/expr={sin (2*pi*\pgfplotstablerow)}
						},
						columns={plot1}
					]
					{500}
					\loadedtable
					\pgfplotstablesave{\loadedtable}{myplot.dat}


					\begin{tikzpicture}
					\begin{axis}[
							line join=bevel,
							mark = +,
							table/x expr={\coordindex},
							xmin=0,
							enlarge x limits=false,
							ymin=-1.5,
							ymax=1.5,
						]
					\addplot[red] table [y expr={\thisrow{plot1}}] {myplot.dat};
					\end{axis}

					\end{tikzpicture}
				</latex-image>
			</image>

		</p>

	</subsection>

	<conclusion>
		<objectives>
			<introduction>
				<p>
					In this section, you learned how to ...
				</p>
			</introduction>
			<ol>
				<li>  </li>
				<li>  </li>
				<li>  </li>
			</ol>
		</objectives>
	</conclusion>

</section>