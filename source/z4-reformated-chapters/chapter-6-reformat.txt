<METADATA>
  <title>What is a Numerical Solution?</title>
  <label>chap-numerical-solution</label>
  <overview>Introduces the concept of numerical solutions, explains why they are necessary, contrasts them with analytic solutions, and walks through Euler's method as the foundational numerical approach.</overview>
  <dependencies>Assumes knowledge of analytic solutions, basic calculus concepts (derivatives and integrals), and an understanding of initial value problems.</dependencies>
</METADATA>

<overview>
  <p>Not every differential equation can be solved neatly with algebra and calculus. When analytic solutions aren't available or practical, we turn to numerical methods. This chapter introduces the idea of a numerical solution, compares it to analytic solutions, and uses Euler's method to show how we can approximate solutions step by step.</p>
</overview>

<objectives>
  <ul>
    <li>Define and distinguish analytic and numerical solutions.</li>
    <li>Explain why numerical methods are essential.</li>
    <li>Understand the iterative nature of numerical methods.</li>
    <li>Describe Euler's method as a one-step process that builds into a full approximation.</li>
    <li>Apply Euler's method to initial value problems and compare its results to analytic solutions when available.</li>
  </ul>
</objectives>

<core-narrative>

  <section label="numerical-intro">
    <title>What is a Numerical Solution?</title>
    <overview>Defines analytic and numerical solutions and explains why numerical methods are necessary.</overview>

    <examples>
      <example role="analytic-vs-numerical">
        <title>Analytic vs. Numerical Solutions</title>
        <statement>Compare the analytic solution y(t) = e^t to a table of approximate values produced numerically.</statement>
      </example>
    </examples>

    <section-summary>
      <ul>
        <li>Analytic (or closed-form) solutions give an exact formula for y(t).</li>
        <li>Numerical solutions give approximate values at discrete points.</li>
        <li>Numerical methods are vital when no closed-form solution exists.</li>
      </ul>
    </section-summary>
  </section>

  <section label="iterative-thinking">
    <title>Iterative Thinking in Numerical Methods</title>
    <overview>Explains the iterative nature of numerical methods and what it means to solve <q>one step at a time.</q></overview>

    <examples>
      <example role="iterative-definition">
        <title>What Does Iterative Mean?</title>
        <statement>Describe iteration as repeating the same calculation step to build a solution incrementally.</statement>
      </example>
    </examples>

    <section-summary>
      <ul>
        <li>Numerical methods are iterative: they repeat a simple step many times.</li>
        <li>Each step uses known information to predict new information.</li>
        <li>Repeating the step across an interval builds the numerical solution.</li>
      </ul>
    </section-summary>
  </section>

  <section label="eulers-one-step">
    <title>Euler's Method: One Step at a Time</title>
    <overview>Introduces the single-step idea behind Euler's method and builds the formula that moves from one point to the next.</overview>

    <examples>
      <example role="euler-rise-run">
        <title>Calculating the Rise</title>
        <statement>Show how the <q>rise = slope × step size</q> relationship drives Euler's method.</statement>
      </example>
    </examples>

    <section-summary>
      <ul>
        <li>Euler's method uses slope at the current point to predict the next point.</li>
        <li>The movement rule is (t_new, y_new) = (t_cur + h, y_cur + h × slope).</li>
        <li>This one-step process is repeated to create a full solution.</li>
      </ul>
    </section-summary>
  </section>

  <section label="eulers-full-process">
    <title>Euler's Method: The Full Process</title>
    <overview>Zooms out from the single step to the full process, walking through a complete numerical approximation.</overview>

    <examples>
      <example role="euler-full-demo">
        <title>Euler's Method Example</title>
        <statement>Use Euler's method with h=0.5 to approximate y' = 6t + y, y(0) = -2 on [0, 1.5].</statement>
      </example>
      <example role="compare-analytic">
        <title>Comparing Analytic and Numerical Solutions</title>
        <statement>Contrast Euler's approximation with the exact solution for y' + 4ty = 0, y(0) = 1.</statement>
      </example>
    </examples>

    <section-summary>
      <ul>
        <li>Divide the interval into equal steps of size h.</li>
        <li>Apply Euler's update rule y_{k+1} = y_k + h f(t_k, y_k) at each step.</li>
        <li>Each iteration adds a new point to the approximation.</li>
      </ul>
    </section-summary>
  </section>

</core-narrative>

<cheatsheet>
  <formula>Euler's Method Update Rule: y_{k+1} = y_k + h f(t_k, y_k)</formula>
  <workflow>Understand need for numerical → Learn iterative concept → Build one-step rule → Repeat to cover full interval</workflow>
  <alerts>Numerical solutions are approximate: accuracy depends on step size. Smaller h usually means more accuracy, but more work.</alerts>
</cheatsheet>

