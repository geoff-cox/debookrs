<section label="eulers-method-full">
	<title>Euler's Method: The Full Process</title>

	<introduction>
        <p>
            In the previous section, we zoomed in on the single <q>step</q> at the heart of Euler's method: move forward by a small amount <m>h</m> in <m>t</m>, and adjust <m>y</m> by <m>h</m> times the slope. Now we'll zoom out. By repeating that step again and again, we can march across an interval, building an approximate solution point by point.
        </p>
	</introduction>

	<subsection label="eulers-method-concrete">
		<title>A Concrete Step Through Euler's Method</title>
		<p>
			Before writing any formulas, it helps to <em>see</em> what Euler's Method feels like. Think of Euler's method like crossing a landscape with only a compass. You know where you start. At each step, you check your direction (the slope from the differential equation), take a small stride that way, then check again. That back-and-forth of <q>step, check, adjust</q> is the rhythm of the method.
        </p>

		<paragraphs>
			<title>The Goal</title>
			
			<p>
				Suppose we have the initial value problem
				<men xml:id="concrete-euler-eqn">
					y'(t) = 6t + y(t), \quad y(0) = -2, \quad t \text{ in } [0, 1.5]
				</men>.
				Let's approximate the solution at the equally-spaced <m>t</m>-values: <m>0, 0.5, 1, 1.5</m>. This tells us that our goal is to approximate the <m>y</m>-values at the following points:   
			</p>

			<me>
				\text{Approximation} = \big\{\ (\ 0\ ,\ ?\ ),\ (\ 0.5\ ,\ ?\ ),\ (\ 1\ ,\ ?\ ),\ (\ 1.5\ ,\ ?\ )\ \big\}
			</me>.

			<p>
				Luckily, the first <m>y</m> value is just the initial condition, <m>y(0) = -2</m>, so we add it to the list:
				<me>\text{Approximation} = \left\{\ (0,-2)\ ,\ (0.5,\ ?\ )\ ,\ (1,\ ?\ )\ ,\ (1.5,\ ?\ )\ \right\}</me>.
				Starting at <m>(0,-2)</m>, Euler's method finds the rest of the points, one-by-one.
			</p>
		</paragraphs>

		<paragraphs>
			<title>Approximating the Next Point</title>

			<p>
				From <m>(0, -2)</m>, we need to get to <m>(0.5,?)</m>. Clearly, the run is <m>0.5</m>, but we also need the slope for our movement direction. This comes directly from the differential equation:
				<me>
					\text{slope at}\ (0,-2)\ \os{\large t=0}{\quad\longrightarrow\quad} y'(0) = 6(0) + y(0) = -2
				</me>.
			</p>

			<p>
				Moving from <m>(0, -2)</m> with a slope of <m>-2</m> and a run of <m>0.5</m> is given by:
				<me>(0, -2) \rightarrow (0 + \text{run}, -2 + \text{slope} \times \text{run}) = (0.5, -2 + -2 \cdot 0.5) = (0.5, -3)</me>.
			</p>

			<p>
				Therefore, the next point is <m>(0.5, -3)</m> and our approximation list becomes:
				<me>\text{Approximation} = \left\{\ (0,-2)\ ,\ (0.5,-3)\ ,\ (1,\ ?\ )\ ,\ (1.5,\ ?\ )\ \right\}</me>.
			</p>
		</paragraphs>

		<paragraphs>
			<title>Approximating the Rest of the Points</title>

			<p>
				To get the third and fourth point, we just repeat what we just did.
			</p>

			<p>
				At <m>(0.5, -3)</m>, we get the slope from:
				<me>
					\text{slope at}\ (0.5, -3)\ \os{\large t=0.5}{\quad\longrightarrow\quad} y'(0.5) = 6(0.5) + y(0.5) = 3 + (-3) = 0
				</me>.
			</p>

			<p>
				Using this slope and the same run, we get the third point:
				<me>(0.5 + \text{run}, -3 + \text{slope} \times \text{run}) = (1, -3 + 0 \cdot 0.5) = (1, -3)</me>.
			</p>

			<p>
				Now we are at <m>(1, -3)</m> and the slope we move this time is:
				<me>
					\text{slope at}\ (1, -3)\ \os{\large t=0}{\quad\longrightarrow\quad} y'(1) = 6(1) + y(1) = 6 + (-3) = 3
				</me>.
			</p>

			<p>
				and our final point is given by:
				<me>(1 + \text{run}, -3 + \text{slope} \times \text{run}) = (1.5, -3 + 3 \cdot 0.5) = (1.5, -1.5)</me>.
			</p>

			<p>
				With this, our approximation is now complete:
				<me>\text{Approximation} = \left\{\ (0,-2)\ ,\ (0.5,-3)\ ,\ (1,-3)\ ,\ (1.5,-1.5)\ \right\}</me>.
			</p>

			<p>
				A plot of the process is given in <xref ref="eulers-method-concrete-table-plot"/>.
			</p>

			<figure xml:id="eulers-method-concrete-table-plot">
				<caption> (left) Euler's method approximation of the solution to <xref ref="concrete-euler-eqn"/> with step size <m>0.5</m>. (right) Plot of each point in the approximation. </caption>
				<sidebyside widths="30% 54%" margins="4% 4%" valign="middle">
					<p>
						<tabular>
							<col right="minor" halign="center"/>
							<col halign="center"/>
							<row bottom="minor">
								<cell><m>t</m></cell>
								<cell><m>y</m> (approx)</cell>
							</row>
							<row>
								<cell><m>0</m></cell>
								<cell><m>-2.0</m></cell>
							</row>
							<row>
								<cell><m>0.5</m></cell>
								<cell><m>-3.0</m></cell>
							</row>
							<row>
								<cell><m>1</m></cell>
								<cell><m>-3.0</m></cell>
							</row>
							<row>
								<cell><m>1.5</m></cell>
								<cell><m>-1.5</m></cell>
							</row>
						</tabular>
					</p>
					<p>
						<image width="100%">
							<latex-image>
									\begin{tikzpicture}[samples=50]
				
										% === colors ===
										\def\fColor{blue}			\def\fFill{\fColor!15}
										\def\gColor{green!60!black}	\def\gFill{\gColor!15}

										% === figure/domain/tick bounds ===
										\def\tmin{-0.2}	\def\tmax{1.8}
										\def\ymin{-4.9}	\def\ymax{1.8}
										\def\tticks{1, 2}
										\def\yticks{2, 4}
										\def\dyA{-2} \def\dyB{0} \def\dyC{3}
										\def\h{0.5} \def\s{0.5}


										% === Function definitions ===
										\newcommand{\f}[1]{e^(#1)}	\def\ftex{e^t}
										\def\ta{0}	\def\b{2}
										\def\c{1.13}

										\begin{axis}[
											width=24cm, height=8cm, scale=0.25,
											xlabel={$t$}, ylabel={$y$},
											%title={Euler's Method Step 1},
											title style={font=\small},
											grid=both,
											%tick style={thick},
											line width=1pt,
											axis lines=middle,
											xtick distance=0.5, ytick distance=2,
											minor x tick num=0, minor y tick num=1,
											xmin=\tmin, xmax=\tmax, ymin=\ymin, ymax=\ymax,
											xticklabel style={yshift=1.5em, font=\scriptsize},
											yticklabel style={font=\scriptsize},
										]
										
											% Read and plot data from file
											\addplot+ [only marks] coordinates {
												(0.0,-2.0)
												(0.5,-3.0)
												(1.0,-3.0)
												(1.5,-1.5)
											};
											\addplot+ [black, no marks, -&gt;] (0.0, -2.0) -- ({0.0+\h*\s}, {-2.0+\dyA*\h*\s});
											\addplot+ [black, no marks, -&gt;] (0.5, -3.0) -- ({0.5+\h*\s}, {-3.0+\dyB*\h*\s});
											\addplot+ [black, no marks, -&gt;] (1.0, -3.0) -- ({1.0+\h*\s}, {-3.0+\dyC*\h*\s});

											\node[font=\scriptsize] at (0.22,	-4.3)	{slope: $-2$};
											\node[font=\scriptsize] at (0.68,	-4.3)	{slope: $0$};
											\node[font=\scriptsize] at (1.18,	-4.3)	{slope: $3$};
										\end{axis}
									\end{tikzpicture}
							</latex-image>
						</image>
					</p>
				</sidebyside>
			</figure>
		</paragraphs>

		<corollary><title><xref provisional="WORK-IN-PROGRESS"/></title>
			<p><xref provisional="WORK-IN-PROGRESS"/></p>
			<sidebyside widths="50% 50%" margins="0% 0%">
				<p>
					<me>
						y' = y + t, \quad y(0) = 1
					</me>
				</p>
				<interactive xml:id="euler-ivp-tool"
					platform="jsxgraph"
					aspect="1:1"
					dark-mode-enabled="yes"
					source="code/jsxgraph/eulers-method/euler-ivp-tool.js"
				>
					<sidebyside width="100%">
						<slate xml:id="euler-ivp-tool-plot1" surface="jsxboard" aspect="1:1" />
					</sidebyside>
					<static>
						<image source="code/jsxgraph/img-labels/t.png" width="100%"> Need to Add </image>
					</static>
				</interactive>
			</sidebyside>
		</corollary>
	</subsection>

	<subsection label="eulers-method-definition">
		<title>Euler's Method</title>
			<p>
				Now let's generalize the concrete example. As we do, check the footnotes for the concrete version of each equation and step. 
			</p>

			<p>
				Consider an initial value problem:<fn><me>y'(t) = 6t + y(t), \quad y(0) = -2, \quad t\ \text{in}\ [0, 1.5]</me></fn>
				<me>
					y'(t) = f(t, y), \quad y(t_0) = y_0, \quad t\ \text{in}\  [t_0, t_N]
				</me>.
			</p>

			<p>
				We divide <m>[t_0, t_N]</m> into equally spaced values (a distance <m>h</m> apart):
				<fn>
					<me>
						\us{\ds t_0}{\us{\uparrow}{0}},\ 
						\us{\ds t_1}{\us{\uparrow}{0.5}},\ 
						\us{\ds t_2}{\us{\uparrow}{1}},\ 
						\us{\ds t_3}{\us{\uparrow}{1.5}}\qquad h = 0.5
					</me>
				</fn>
			</p>

			<me>
				t_0,\ t_1,\ t_2,\ \ldots,\ t_N, \quad\text{where}\quad t_{k+1} = t_k + h
			</me>

			<p>
				Using the shorthand <m>y_k = y(t_k)</m>, our goal is to approximate the points:
				<fn>
					<me>
						\text{Approximation} = \{\ (0,?),\ (0.5,?),\ (1,?),\ (1.5,?)\ \big\}
					</me>
				</fn>
        	</p>

			<me>
				(t_0, y_0), (t_1, y_1), \ldots, (t_N, y_N).
			</me>

			<p>
				The first point, <m>(t_0, y_0)</m>, is known since it is the initial condition. The remaining points are approximated using the <xref ref="point-slope-movement-rule" text="custom">movement rule</xref>, where <q>cur</q> is <m>k</m> and <q>new</q> is <m>k+1</m>:
			</p>

			<me>
				(t_{k+1},\ y_{k+1}) = (t_k + h,\ y_k + h\cdot\text{slope})
			</me>.

			<p>
				The slope is found from <m>f(t_k, y_k)</m><fn><me>6t + y(t)</me></fn> in the differential equation, so the rule becomes:
			</p>

			<me>
				(t_{k+1},\ y_{k+1}) = (t_k + h,\ y_k + h\cdot f(t_k, y_k)).
			</me>

			<p>
				Extracting just the <m>y</m>-coordinate, gives the update rule for Euler's method:
				<me>
					y_{k+1} = y_k + h\cdot f(t_k, y_k).
				</me>
			</p>

			<p>
				That's it. All of the <m>y</m> values in the table of <xref ref="eulers-method-concrete-table-plot"/> can be found with this formula.
			</p>

			<exercise label="eulers-method-chkpt-1">
				<title>Match Euler's Method Parts to their Meaning</title>
				<statement>
					<p>
						Assume the current approximation using Euler's Method is denoted by <m>y_k</m>. In this context, match the mathematical expression with its meaning.
					</p>
				</statement>
				<feedback>
					<p>
					These pairings are essential when converting a piecewise function into unit step form. The form you choose depends entirely on where each piece is active.
					</p>
				</feedback>
				<cardsort>
					<match>
						<premise><m>y_{k+1}</m></premise>
						<response>The <m>y</m> value of the next approximation.</response>
					</match>
					<match>
						<premise><m>y_{k-1}</m></premise>
						<response>The <m>y</m> value of the previous approximation.</response>
					</match>
					<match>
						<premise><m>h</m></premise>
						<response>The distance between <m>t_k</m> and <m>t_{k+1}</m>.</response>
					</match>
					<match>
						<premise><m>f(t_k, y_k)</m></premise>
						<response>The slope of the solution at the current approximation.</response>
					</match>
					<match>
						<premise><m>t_k</m></premise>
						<response>The <m>t</m> value of the current approximation.</response>
					</match>
					<match>
						<premise><m>h \cdot f(t_k, y_k)</m></premise>
						<response>The rise (or fall) in the <m>y</m> value from the current approximation to the next approximation.</response>
					</match>
				</cardsort>
			</exercise>

			<exploration xml:id="euler-method">
				<title>Euler's Method</title>
				<p>
					Given an initial value problem
				</p>
				<me>
					y' = f(t, y), \quad y(t_0) = y_0, \quad t_0 \le t \le t_N
				</me>
				<p>
					approximate the solution with the following steps:
				</p>
				<dl width="narrow">
					<li xml:id="eulers-method-step-1"><title>Select step size</title>
						<p>Choosing a step size <m>h</m> determines <m>t_0,\ t_1,\ t_2,\ ...,\ t_{N}</m> where <m>t_k = t_0 + kh</m> for <m>k = 0, 1, 2, ..., N</m>.</p>
					</li>
					<li xml:id="eulers-method-step-2"><title>Apply Euler's update rule</title>
						<p>
							For <m>k = 0</m> to <m>N - 1</m>, compute
							<me>
							y_{k+1} = y_k + h \cdot f(t_k, y_k).
							</me>
						</p>
					</li>
				</dl>
			</exploration>

			<p>
				Desipte being based on relatively simple idea, Euler's method reveals something profound: with nothing more than a starting point and slope formula, you can approximate a solution that no closed-form equation could describe.
			</p>
	</subsection>

	<subsection label="eulers-method-examples">
		<title>Examples</title>

		<example label="eulers-method-example-1">
			<title>Euler's Method Example</title>
			<statement>
				<p>
					Use Euler's method to approximate the solution to the differential equation
					<me>
						y' = t + y, \quad y(0) = -\frac{7}{8}
					</me>
					over the interval <m>[0, 1.5]</m> with a step size of <m>h = 0.5</m>.
				</p>
			</statement>

			<solution>

				<p>
					<xref ref="eulers-method-step-1" text="title"/>. The step size is <m>h = 0.5</m>, so the approximation locations are
					<m>t_0 = 0, t_1 = 0.5, t_2 = 1.0, t_3 = 1.5</m>.
				</p>

				<p>
					<xref ref="eulers-method-step-2" text="title"/>. The initial condition gives the first value in our approximation, <m>y_0 = -\frac{7}{8} = -0.875</m>.
				</p>

				<p>
					Now, we can use the formula
					<me>
						y_{k+1} = y_k + h\left(t_k + y_k\right)
					</me>
					to find <m>y_1</m>, <m>y_2</m> and <m>y_3</m> as follows:
				</p>

				<sidebyside widths="5% 8% 82% 5%" valign="middle">
					<p/>
					<p>
						<md>
							<mrow> \text{G}	\amp\text{iven} </mrow>
							<mrow> k		\amp = 0 </mrow>
							<mrow> k		\amp = 1 </mrow>
							<mrow> k		\amp = 2 </mrow>
						</md>
					</p>
					<p>
						<md>
							<mrow> y_0	\amp = -0.875 </mrow>
							<mrow> y_1	\amp = y_0 + h\left(t_0 + y_0\right) = -0.875 + 0.5\left(0 - 0.875\right) </mrow>
							<mrow> y_2	\amp = y_1 + h\left(t_1 + y_1\right) = -1.3125 + 0.5\left(0.5 - 1.3125\right) </mrow>
							<mrow> y_3	\amp = y_2 + h\left(t_2 + y_2\right) = -1.5625 + 0.5\left(1.0 - 1.5625\right) </mrow>
						</md>
					</p>
					<p/>
				</sidebyside>

				<p>
					The simplified calculations are summarized in the following table:
				</p>

				<tabular>
					<col right="minor" halign="center"/>
					<col right="minor" halign="left"/>
					<col halign="center"/>
					<row halign="center" bottom="minor">
						<cell><m>k</m></cell>
						<cell><m>t_k</m></cell>
						<cell><m>y_k</m></cell>
					</row>
					<row>
						<cell><m>0</m></cell>
						<cell><m>0.0</m></cell>
						<cell><m>-0.875</m></cell>
					</row>
					<row>
						<cell><m>1</m></cell>
						<cell><m>0.5</m></cell>
						<cell><m>-0.75</m></cell>
					</row>
					<row>
						<cell><m>2</m></cell>
						<cell><m>1.0</m></cell>
						<cell><m>-0.5</m></cell>
					</row>
					<row halign="center">
						<cell><m>3</m></cell>
						<cell><m>1.5</m></cell>
						<cell><m>-0.125</m></cell>
					</row>
				</tabular>

				<p>
					Thus, the approximate solution to the initial-value problem is
					<me>
						y(0) \approx -\frac{7}{8}, \quad y(0.5) \approx -\frac{3}{4}, \quad y(1.0) \approx -\frac{1}{2}, \quad y(1.5) \approx -\frac{1}{8}.
					</me>
				</p>

				<p>
					We can visualize the approximation by plotting the points <m>(t_k, y_k)</m> and connecting them with line segments. The exact solution to the initial-value problem is given by
					<me>
						y(t) = \frac{1}{8}e^t - t - 1.
					</me>
				</p>

				<p>
					The following plot shows the approximation and the exact solution.
				</p>

				<image xml:id="sageplot-euler-approximation">

					<sageplot variant="2d">
						y = lambda x : (1/8)*exp(x)-x-1
						euler = lambda x, y, dx : y + dx*(x + y)
						y0 = -7/8
						x0, h, xF = 0, 0.5, 1.5
						ymin, ymax = -3, 1

						y_data = [(x0, y0)]
						yp = y0

						for xp in xsrange(x0, xF, h):
							yp = euler(xp, yp, h)
							y_data.append((xp + h, yp))

						xticks = [0, 0.5, 1, 1.5, 2]
						yticks = [i for i in range(ymin, ymax)]

						grid_rgbcolor = (0.9, 0.9, 0.9)
						grid = plot([], ymin=ymin, ymax=ymax, fontsize=16, ticks=[xticks, yticks],)

						for gx in xsrange(x0, xF, 0.25, include_endpoint=True):
							grid += line([(gx, ymin),(gx, ymax)], rgbcolor=grid_rgbcolor)
						for gy in xsrange(ymin, ymax, 1, include_endpoint=True):
							grid += line([(x0,  gy),(xF, gy)], rgbcolor=grid_rgbcolor)

						y_plot = plot(y, x0, xF, rgbcolor='red', thickness=1,)
						yn_plot = list_plot(y_data, markeredgecolor="black", rgbcolor=(0.2,0.8,0.1), pointsize=40)
						y_plot + yn_plot + grid

					</sageplot>
				</image>

				<p>
					The red curve is the exact solution, while the green points are the approximated values at <m>t = 0, 0.5, 1.0, 1.5</m>.
					The blue line segments connect the points in the approximation, showing how Euler's method steps through the solution.
				</p>

				<p>
					The following plot shows the approximation and the exact solution, with a grid for better visualization.
				</p>

				<p>
					<image xml:id="sageplot-polynomial-approximation">

						<sageplot variant="2d">
							y = lambda x : (1/8)*exp(x)-x-1
							euler = lambda x, y, dx : y + dx*(x + y)
							y0 = -7/8
							x0, h, xF = 0, 0.5, 1.5
							ymin, ymax = -3, 1

							y_data = [(x0, y0)]
							yp = y0

							for xp in xsrange(x0, xF, h):
								yp = euler(xp, yp, h)
								y_data.append((xp + h, yp))

							xticks = [0, 0.5, 1, 1.5, 2]
							yticks = [i for i in range(ymin, ymax)]

							grid_rgbcolor = (0.9, 0.9, 0.9)
							grid = plot([], ymin=ymin, ymax=ymax, fontsize=16, ticks=[xticks, yticks],)
							

							for gx in xsrange(x0, xF, 0.25, include_endpoint=True):
								grid += line([(gx, ymin),(gx, ymax)], rgbcolor=grid_rgbcolor)
							for gy in xsrange(ymin, ymax, 1, include_endpoint=True):
								grid += line([(x0,  gy),(xF, gy)], rgbcolor=grid_rgbcolor)

							y_plot = plot(y, x0, xF, rgbcolor='red', thickness=1,)
							yn_plot = list_plot(y_data,  markeredgecolor="black", rgbcolor=(0.2,0.8,0.1), pointsize=40)
							y_plot + yn_plot + grid

						</sageplot>
					</image>
				</p>

				<image width="100%">
					<latex-image>
						% User Defined Parameters
						\def\a{0} 		% interval start
						\def\b{1} 		% interval end
						\def\h{0.2} 	% stepsize
						\def\round{2}	% decimal rounding
						\def\s{5}  		% scaling factor

						\begin{tikzpicture}[scale=\s]

							\pgfkeys{/pgf/number format/.cd,fixed,precision=\round}
						
							% Calculate number of partitions
							\pgfmathsetmacro{\N}{(\b-\a)/\h}
							
							% Draw the x-axis
							\draw[-&gt;,thick] (\a - 2*\h/\s,0) -- (\b + 2*\h/\s,0) node[right] {$x$};

							% Draw the partition points and labels
							\foreach \i in {0,...,\N}
							{
								\pgfmathsetmacro{\currentPoint}{\a + \i*\h}
								\draw (\currentPoint,0.1/\s) -- (\currentPoint,-0.1/\s) node[below] {$\pgfmathprintnumber{\currentPoint}$};
								\draw 							(\currentPoint,-0.5/\s) node[below] {$t_{\i}$};

							}
							
						\end{tikzpicture}
					</latex-image>
				</image>

				<p>
					<md>
						<mrow> y'(t_k) 										\amp = (y(t_k))^2 - t_k </mrow>
						<mrow> \frac{y(t_{k+1}) - y(t_k)}{h}	\amp = (y(t_k))^2 - t_k </mrow>
						<mrow> \frac{y_{k+1} - y_k}{h}	\amp = (y_k)^2 - t_k </mrow>
						<mrow> y(t_{k+1}) - y(t_k) 							\amp = h\left((y(t_k))^2 - t_k\right) </mrow>
						<mrow> y(t_{k+1}) 									\amp = y(t_k) + h\left((y(t_k))^2 - t_k\right) </mrow>
					</md>
				</p>
			</solution>
		</example>

		<example label="eulers-method-example-2">
			<title>Analytical and Numerical Solutions</title>
			<statement>
				<p>
					Consider the differential equation
					<me>
						y' + 4ty = 0, \, y(0) = 1
					</me>.
					<ol>
						<li>
							<p>
								Find the analytical solution to this equation using the method of separation of variables.
							</p>
						</li>
						<li>
							<p>
								Use Euler's method with a step size of <m>h = 0.1</m> to approximate the solution at <m>t = 0.5</m>. 
							</p>
						</li>
						<li>
							<p>
								Compare the analytical solution with the numerical approximation obtained from Euler's method.
							</p>
						</li>
					</ol>
				</p>
			</statement>

			<solution>
				<p>
					To solve the differential equation <me>y' + 4ty = 0</me> using the method of separation of variables, we separate the variables as follows:
					<me>
						\frac{dy}{y} = -4t \, dt
					</me>
					Integrating both sides gives:
					<me>
						\ln |y| = -2t^2 + C
					</me>
					Exponentiating both sides results in:
					<me>
						y = Ce^{-2t^2}
					</me>
					Since the initial condition, <m>y(0) = 1</m>, gives <m>C = 1</m>, the analytical solution is:
					<me>
						y(t) = e^{-2t^2}
					</me>
				</p>

				<p>
					Next, we apply Euler's method to approximate the solution at <m>t = 0.5</m>. The general formula for Euler's method is:
					<me>
						y_{k+1} = y_k + h f(t_k, y_k)
					</me>
					where <m>f(t, y) = -4ty</m> and <m>h=0.1</m>. So, we can update the formula as:
				</p>

				<me>
					y_{k+1} = y_k - 0.4 t_k y_k \quad \text{where}\ y_0 = 1.
				</me>

				<p>
					For <m>k = 0, 1, \ldots, 4</m>, we contruct the following table:
				</p>

				<tabular>
					<col halign="center" right="minor" />
					<col halign="center" right="minor" />
					<col halign="left" right="minor" />
					<col halign="left" />
					<row halign="center" bottom="minor">
						<cell><m>k</m></cell>
						<cell><m>t_k</m></cell>
						<cell><m>y_k</m></cell>
						<cell><m>y_{k+1}</m></cell>
					</row>
					<row>
						<cell><m>0</m></cell>
						<cell><m>0.0</m></cell>
						<cell><m>y_0 = {\DLBa 1}</m></cell>
						<cell><m>y_1 = {\DLBa 1} + 0.1(-4 \cdot 0.0 \cdot {\DLBa 1}) = {\DLGa 1}</m></cell>
					</row>
					<row>
						<cell><m>1</m></cell>
						<cell><m>0.1</m></cell>
						<cell><m>y_1 = {\DLBa 1}</m></cell>
						<cell><m>y_2 = {\DLBa 1} + 0.1(-4 \cdot 0.1 \cdot {\DLBa 1}) = {\DLGa 0.96}</m></cell>
					</row>
					<row>
						<cell><m>2</m></cell>
						<cell><m>0.2</m></cell>
						<cell><m>y_2 = {\DLBa 0.96}</m></cell>
						<cell><m>y_3 = {\DLBa 0.96} + 0.1(-4 \cdot 0.2 \cdot {\DLBa 0.96}) = {\DLGa 0.8832}</m></cell>
					</row>
					<row halign="center">
						<cell><m>3</m></cell>
						<cell><m>0.3</m></cell>
						<cell><m>y_3 = {\DLBa 0.8832}</m></cell>
						<cell><m>y_4 = {\DLBa 0.8832} + 0.1(-4 \cdot 0.3 \cdot {\DLBa 0.8832}) \approx {\DLGa 0.7772}</m></cell>
					</row>
					<row halign="center">
						<cell><m>4</m></cell>
						<cell><m>0.4</m></cell>
						<cell><m>y_4 = {\DLBa 0.7772}</m></cell>
						<cell><m>y_5 = {\DLBa 0.7772} + 0.1(-4 \cdot 0.4 \cdot {\DLBa 0.7772}) \approx {\DLGa 0.6529}</m></cell>
					</row>
				</tabular>

				<p>
					Since <m>t_5=0.5</m>, the approximation we are looking for is <m>y_5 \approx 0.6529</m>.
				</p>

				<p>
					Comparing this with the analytical solution at <m>t = 0.5</m>, we see the true value is:
					<me>
						y(0.5) = e^{-2(0.5)^2} = e^{-0.5} \approx 0.6065.
					</me>
					Although there is some error between the two values, it is more due to the step size we chose, rather than the method itself. A smaller step size would yield a more accurate approximation. For example, using <m>h = 0.001</m> gives the approximation: <m>y(0.5) \approx 0.6069</m>. 
				</p>
			</solution>
		</example>

		<example label="eulers-method-example-3">
			<title>Example: Euler's Method with <m>h = 0.5</m></title>
		<statement>
			<p>
				Use Euler's method to approximate the solution to
				<me>
				y'(t) = 6t + y(t), \quad y(0) = -2
				</me>
				over <m>t = 0</m> to <m>1.5</m> using step size <m>h = 0.5</m>.
			</p>
		</statement>
		<solution>
			<p>The formula is:</p>
			<me>
			y_{k+1} = y_k + 0.5 \cdot (6t_k + y_k)
			</me>
			<tabular>
			<col right="minor" /><col /><col /><col />
			<row bottom="minor">
				<cell><m>k</m></cell>
				<cell><m>t_k</m></cell>
				<cell><m>y_k</m></cell>
				<cell><m>y_{k+1} = y_k + 0.5(6t_k + y_k)</m></cell>
			</row>
			<row>
				<cell>0</cell><cell>0.0</cell><cell>-2.0</cell><cell>-3.0</cell>
			</row>
			<row>
				<cell>1</cell><cell>0.5</cell><cell>-3.0</cell><cell>-3.0</cell>
			</row>
			<row>
				<cell>2</cell><cell>1.0</cell><cell>-3.0</cell><cell>-1.5</cell>
			</row>
			</tabular>
			<p>Thus, the approximate values are:</p>
			<me>
			y(0) \approx -2,\quad y(0.5) \approx -3,\quad y(1.0) \approx -3,\quad y(1.5) \approx -1.5
			</me>
		</solution>
		</example>
	</subsection>

	<p>
		Euler's method runs on an intuitive idea: use the slope at each point to <q>predict</q> the next point. It's simple, but that simplicity is its strength. This method is often the first stepping stone into the world of numerical methods and the same pattern of <q>predict, step, repeat</q> forms the backbone of many other techniques.
	</p>

	<assemblage label="eulers-method-wrap-up">
		<title>📤 Wrap-Up</title>
		<p>
			<paragraphs label="eulers-method-takeaways">
				<title>🗝️ Key Takeaways..</title>
				<ul marker="square">
					<li>Euler's Method turns slope information into a sequence of small steps forward.</li>
                    <li>Each step uses the simple rule: <m>y_{k+1} = y_k + h f(t_k, y_k)</m>.</li>
					<li>Smaller step sizes usually mean better accuracy — but more steps.</li>
					<li>This method is the foundation for more advanced numerical techniques.</li>
				</ul>
			</paragraphs>
		</p>
	</assemblage>
</section>