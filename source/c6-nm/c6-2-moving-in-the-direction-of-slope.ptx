<section label="eulers-method-one-step">
	<title> One Small Step for Euler's Method </title>

	<introduction>
		<p>
			NEED AN INTRO
		</p>
	</introduction>

	<paragraphs label="eulers-method-one-step-thinking-in-steps">
		<title> Iterative Methods—Thinking in Steps </title>

		<p>
			Most numerical methods are <em>iterative</em>, meaning they repeat the same task until a goal is reached. Now, each task also has a goal: to create new information from known information. Repeating a task is easy, so mastering an iterative method amounts to understanding how it's task generates new information.
		</p>
	</paragraphs>

	<paragraphs label="eulers-method-one-step-repeated-task">
		<title> Euler's Method Task </title>

		<p>
			In the case of Euler's method, the task can be described as moving from one point of the solution to another <q>nearby</q> point in the direction of the slope. More specifically, assuming <m>(t_{\text{cur}}, y_{\text{cur}})</m> is a point of the solution moves along a line with a known slope, Euler's method predicts where the new point <m>(t_{\text{new}}, y_{\text{new}})</m> will be located.
		</p>

		<p>
			In this section, we will break down this task by answering the following questions:
			<ol>
				<li>
					<p>
						What does it mean to move in the direction of a slope?
					</p>
				</li>
				<li>
					<p>
						Given a point <m>(t_{\text{cur}}, y_{\text{cur}})</m>, slope, and size size, what is the formula for <m>(t_{\text{new}}, y_{\text{new}})</m>?
					</p>
				</li>
			</ol>
		</p>
	</paragraphs>

	<subsection label="eulers-method-one-step-direction-of-slope">
		<title> Moving in the Direction of a Slope </title>
		<p>
			The first question we will address is <q>What does it mean to move in the direction of a slope?</q> To answer this, suppose our starting point is <m>(1,1)</m> and our movement direction has the slope <m>\frac32</m>.
		</p>

		<p>
			Recall that slope is often referred to as <q>rise over run</q>, which is just a way to describe how to get from one point to another. In this case, the rise is 3 and the run is 2, and, from <m>(1,1)</m>, another point, illustrated in <xref ref="multiple-rise-run-a"/>, is
		</p>

		<me>
			(1 + \text{run}, 1 + \text{rise}) = (1 + 2, 1 + 3) = (3,4).
		</me>

		<note>
			<title> <q>Rise</q> Clarification </title>
			<p>
				Keep in mind that <q>rise</q> is a bit of a misnomer here, since it can also be negative. In such cases, <q>rise</q> technically is <q>fall</q>, but we will continue to use <q>rise</q> for simplicity.
			</p>
		</note>

		<p>
			The rise and run we used were simply chosen as the numerator and denominator of the slope, however, there are many different options. For example, the fractions
		</p>

		<me>
			\left(\frac{\text{rise}}{\text{run}}\right)\quad\quad \frac32,\ \frac{6}{4},\ \frac{3\pi}{2\pi},\ \frac{\frac32}{1},\ \ldots,
		</me>

		<p>
			all represent the same slope, but have different rise and run values. See <xref ref="multiple-rise-run-b"/>.
		</p>

		<p>
			Euler's method seeks a way to specify the <q>run</q>, and find the corresponding <q>rise</q> that keeps the slope the same. The last fraction, above, conveniently shows a denominator of <m>1</m>, so we start there since it leads to the following rise and run:
		</p>

		<me>
			\frac{3}{2} = \frac{\frac32}{1} = \frac{\frac32 \cdot \text{run of our choice}}{1 \cdot \text{run of our choice}} = \frac{\frac32 \cdot h}{h},
		</me>

		<p>
			where the rise is <m>\frac32 \cdot h</m> and the run is the step size <m>h</m>. In fact, for any slope the rise can be expressed as 
		</p>

		<me>
			\text{rise} = \text{slope} \cdot h.
		</me>

		<figure xml:id="multiple-rise-run">
			<caption>Same Slope, Different Rise and Runs</caption>
			<sidebyside widths="7.6% 23.4% 6% 25% 6% 24.6% 7.4%" valign="top">
				<p/>
				<figure xml:id="multiple-rise-run-a"><caption>Rise <m>3</m>, run <m>2</m></caption>
					<image>
						<latex-image>
							% === User Defined Parameters ===
							\def\run{2} \def\rise{3} \def\yint{-0.5}	% slope rise/run, yintercept
							\def\ta{1} \def\ya{1}						% point coordinates
							\def\tmin{-0.8} \def\tmax{3.9}
							\def\ymin{-0.8} \def\ymax{4.8}
							\def\tticks{1,3} \def\yticks{1,4}
							\def\tgrid{1,2,...,3} \def\ygrid{1,2,...,4}
							\def\steps{1} \pgfmathsetmacro\N{\steps - 1}
							
							\begin{tikzpicture}[scale=0.6]
								
								% === t-axis and grid ===
								\foreach \tk in \tgrid{\draw[thin, gray!50!white] (\tk,\ymin) -- (\tk,\ymax);}
								\foreach \tk in \tticks{
									\draw (\tk,-0.1) -- (\tk,0.1)
									node[fill=white, inner sep = 1pt, yshift=-0.1cm, below, midway, font=\small] {$\tk$};
								}
								\draw[black, -&gt;] (\tmin, 0) -- (\tmax, 0) node[below] {$t$};
								
								% === y-axis and grid ===
								\foreach \yk in \ygrid{\draw[thin, gray!50!white] (\tmin,\yk) -- (\tmax,\yk);}
								\foreach \yk in \yticks{
									\draw (-0.1,\yk) -- (0.1,\yk)
									node[fill=white, inner sep = 1pt, xshift=-0.1cm, left, midway, font=\small] {$\yk$};
								}
								\draw[-&gt;] (0, \ymin) -- (0, \ymax) node[right] {$y$};
								
								% === line plot ===
								\draw[ultra thick, domain=\tmin+0.5:\tmax-0.2, &lt;-&gt;] plot[] (\x, \rise/\run*\x + \yint);

								% === rise/run display ===
								\foreach \k in {0,...,\N}
								{
									\pgfmathsetmacro{\tk}{\ta + \k*\run}
									\pgfmathsetmacro{\yk}{\ya + \k*\rise}
									\draw[blue!80!green, very thick, -&gt;]
										(\tk, \yk) -- (\tk, \yk + \rise)
										node[fill=white, xshift=0cm, inner sep = 1pt, midway, font=\small] {$\rise$};
									\draw[blue!40!green, very thick, -&gt;]
										(\tk, \yk + \rise) -- (\tk + \run - 0.1, \yk + \rise)
										node[fill=white, inner sep = 0pt, xshift=0cm, midway, font=\small] {$\run$};
									\draw[fill=white, very thick] (\tk, \yk) circle (3pt);
								}

								% === first point label ===
								\draw (\ta, \ya) node[below, fill=white, inner sep = 1pt, xshift=0.4cm, yshift=-0.06cm, font=\small] {$(\ta,\ya)$};

								% === second point label ===
								\pgfmathsetmacro{\tk}{\ta + \run}
								\pgfmathsetmacro{\yk}{\ya + \rise}
								\draw (\tk, \yk) node[below, fill=white, inner sep = 1pt, xshift=0.3cm, yshift=-0.15cm, font=\small] {$(3,4)$};

								% === last point ===
								\pgfmathsetmacro{\tk}{\ta + \steps*\run}
								\pgfmathsetmacro{\yk}{\ya + \steps*\rise}
								\draw[fill=white, very thick] (\tk, \yk) circle (3pt);

							\end{tikzpicture}
						</latex-image>
					</image>
				</figure>
				<p/>
				<figure xml:id="multiple-rise-run-b"><caption>Rise <m>\frac32</m>, run <m>1</m></caption>
					<image>
						<latex-image>
							% === User Defined Parameters ===
							\def\run{1} \def\rise{1.5} \def\yint{-0.5}	% slope rise/run, yintercept
							\def\ta{1} \def\ya{1}					% point coordinates
							\def\tmin{-0.8} \def\tmax{3.4}
							\def\ymin{-0.8} \def\ymax{3.9}
							\def\tticks{1,2,3} \def\yticks{1,2,3}
							\def\tgrid{1,2,...,3} \def\ygrid{1,2,...,3}
							\def\steps{1} \pgfmathsetmacro\N{\steps - 1}
							
							\begin{tikzpicture}[scale=0.7]
								
								% === t-axis and grid ===
								\foreach \tk in \tgrid{\draw[thin, gray!50!white] (\tk,\ymin) -- (\tk,\ymax);}
								\foreach \tk in \tticks{
									\draw (\tk,-0.1) -- (\tk,0.1)
									node[fill=white, inner sep = 1pt, yshift=-0.1cm, below, midway, font=\small] {$\tk$};
								}
								\draw[black, -&gt;] (\tmin, 0) -- (\tmax, 0) node[below] {$t$};
								
								% === y-axis and grid ===
								\foreach \yk in \ygrid{\draw[thin, gray!50!white] (\tmin,\yk) -- (\tmax,\yk);}
								\foreach \yk in \yticks{
									\draw (-0.1,\yk) -- (0.1,\yk)
									node[fill=white, inner sep = 1pt, xshift=-0.1cm, left, midway, font=\small] {$\yk$};
								}
								\draw[-&gt;] (0, \ymin) -- (0, \ymax) node[right] {$y$};
								
								% === line plot ===
								\draw[ultra thick, domain=\tmin+0.5:\tmax-0.4, &lt;-&gt;] plot[] (\x, \rise/\run*\x + \yint);

								% === rise/run display ===
								\foreach \k in {0,...,\N}
								{
									\pgfmathsetmacro{\tk}{\ta + \k*\run}
									\pgfmathsetmacro{\yk}{\ya + \k*\rise}
									\draw[blue!80!green, very thick, -&gt;]
										(\tk, \yk) -- (\tk, \yk + \rise)
										node[fill=white, xshift=-0.1cm, inner sep = 1pt, midway, font=\small] {$\sfrac32$};
									\draw[blue!40!green, very thick, -&gt;]
										(\tk, \yk + \rise) -- (\tk + \run - 0.1, \yk + \rise)
										node[fill=white, inner sep = 0pt, xshift=0cm, midway, font=\small] {$\run$};
									\draw[fill=white, very thick] (\tk, \yk) circle (3pt);
								}

								% === first point label ===
								\draw (\ta, \ya) node[below, fill=white, inner sep = 1pt, xshift=0.4cm, yshift=-0.06cm, font=\small] {$(\ta,\ya)$};

								% === second point label ===
								\pgfmathsetmacro{\tk}{\ta + \run}
								\pgfmathsetmacro{\yk}{\ya + \rise}
								\draw (\tk, \yk) node[below, fill=white, inner sep = 1pt, xshift=0.4cm, yshift=-0.1cm, font=\small] {$(2,\frac52)$};

								% === last point ===
								\pgfmathsetmacro{\tk}{\ta + \steps*\run}
								\pgfmathsetmacro{\yk}{\ya + \steps*\rise}
								\draw[fill=white, very thick] (\tk, \yk) circle (3pt);

							\end{tikzpicture}
						</latex-image>
					</image>
				</figure>	
				<p/>
				<figure xml:id="multiple-rise-run-c"><caption>Rise <m>mh</m>, run <m>h</m></caption>
					<image>
						<latex-image>
							% === User Defined Parameters ===
							\def\run{2} \def\rise{3} \def\yint{-0.5}	% slope rise/run, yintercept
							\def\ta{1} \def\ya{1}						% point coordinates
							\def\tmin{-0.8} \def\tmax{4.3}
							\def\ymin{-0.8} \def\ymax{4.8}
							\def\tticks{1,3} \def\yticks{1,4}
							\def\tgrid{1,2,...,3} \def\ygrid{1,2,...,4}
							\def\steps{1} \pgfmathsetmacro\N{\steps - 1}
							
							\begin{tikzpicture}[scale=0.6]
								
								% === t-axis and grid ===
								\foreach \k in {0,1}{
									\draw[thin, gray!50!white] ({\ta + \k*\run},\ymin) -- ({\ta + \k*\run},\ymax);
									\draw[black] ({\ta + \k*\run},-0.1) -- ({\ta + \k*\run},0.1) 
									node[fill=white, inner sep = 1pt, yshift=-0.1cm, below, midway] {$t_{\k}$};
								}
								\draw[black, -&gt;] (\tmin, 0) -- (\tmax, 0) node[below] {$t$};
								
								% === y-axis and grid ===
								\foreach \k in {0,1}{
									\draw[thin, gray!50!white] (\tmin, {\ya + \k*\rise}) -- (\tmax, {\ya + \k*\rise});
									\draw (-0.1, {\ya + \k*\rise}) -- (0.1, {\ya + \k*\rise})
									node[fill=white, inner sep = 1pt, xshift=-0.1cm, left, midway] {$y_{\k}$};
								}
								\draw[-&gt;] (0, \ymin) -- (0, \ymax) node[right] {$y$};
								
								% === line plot ===
								\draw[ultra thick, domain=\tmin+0.5:\tmax-0.5, &lt;-&gt;] plot[] (\x, \rise/\run*\x + \yint);

								% === rise/run display ===
								\foreach \k in {0,...,\N}
								{
									\pgfmathsetmacro{\tk}{\ta + \k*\run}
									\pgfmathsetmacro{\yk}{\ya + \k*\rise}
									\draw[blue!80!green, very thick, -&gt;]
										(\tk, \yk) -- (\tk, \yk + \rise)
										node[fill=white, xshift=0cm, inner sep = 1pt, midway, font=\small] {$\frac32h$};
									\draw[blue!40!green, very thick, -&gt;]
										(\tk, \yk + \rise) -- (\tk + \run - 0.1, \yk + \rise)
										node[fill=white, inner sep = 0pt, xshift=0cm, midway, font=\small] {$h$};
									\draw[fill=white, very thick] (\tk, \yk) circle (3pt);
								}

								% === first point label ===
								\draw (\ta, \ya) node[below, fill=white, inner sep = 1pt, xshift=0.55cm, yshift=-0.1cm, font=\small] {$(t_0,y_0)$};

								% === second point label ===
								\pgfmathsetmacro{\tk}{\ta + \run}
								\pgfmathsetmacro{\yk}{\ya + \rise}
								\draw (\tk, \yk) node[below, fill=white, inner sep = 1pt, xshift=0.4cm, yshift=-0.2cm, font=\small] {$(t_1,y_1)$};

								% === last point ===
								\pgfmathsetmacro{\tk}{\ta + \steps*\run}
								\pgfmathsetmacro{\yk}{\ya + \steps*\rise}
								\draw[fill=white, very thick] (\tk, \yk) circle (3pt);

								% === extra h (run) label ===
								\draw[blue!40!green, thick, -&gt;]
										(\ta + 0.3, -0.45) -- (\ta + \run - 0.25, -0.45)
										node[fill=white, inner sep = 1pt, xshift=0cm, midway, font=\small] {$h$};

							\end{tikzpicture}
						</latex-image>
					</image>
				</figure>
				<p/>
			</sidebyside>
		</figure>
	</subsection>

	<subsection label="eulers-method-one-step-movement-formula">
		<title> The Movement Formula </title>
		<p>
			The last result leads us to the answer of the next question:
		</p>

		<sidebyside widths="3% 94% 3%">
			<p/>
			<p>
				<q>Given a point <m>(t_{\text{cur}}, y_{\text{cur}})</m>, slope, and step size, what is the formula for <m>(t_{\text{new}}, y_{\text{new}})</m>?</q>
			</p>
			<p/>
		</sidebyside>

		<p>
			First of all, since we are moving in the direction of the slope, we know that
		</p>

		<me>
			(t_{\text{new}},\ y_{\text{new}}) = (t_{\text{cur}} + \text{run},\ y_{\text{cur}} + \text{rise}),
		</me>

		<p>
			but in Euler's method the <m>t</m>-values are separated by a step size <m>h</m>, so we can write this as
		</p>

		<men xml:id="point-slope-movement-rule">
			(t_{\text{new}},\ y_{\text{new}}) = (t_{\text{cur}} + h,\ y_{\text{cur}} + h\cdot\text{slope}),
		</men>

		<p>
			which is the desired formula that gives the new point assuming we know current point, the direction slope, and the step size <m>h</m>.
		</p>
	</subsection>

	<assemblage label="eulers-method-one-step-wrap-up">
		<title> 📤 Wrap-Up </title>
		<p>
			<paragraphs label="eulers-method-one-step-takeaways">
				<title> 🗝️ Key Takeaways.. </title>
				<ul marker="square">
					<li></li>
 				</ul>
			</paragraphs>

			<paragraphs label="eulers-method-one-step-cyu">
				<title> Check Your Understanding </title>
				<exercise label="eulers-method-one-step-cyu-bundle">
					<title>📖❓Moving in the Slope's Direction </title>

				</exercise>
			</paragraphs>
		</p>
	</assemblage>
</section>