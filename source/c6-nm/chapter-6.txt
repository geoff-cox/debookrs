<section label="whats-a-numerical-soln">
	<title>What is a Numerical Solution?</title>

	<p>
		Most of what we've done, so far, has been focused on finding <em>exact</em> solutions to differential equations, like <m>y(t) = e^{-3t} \sin(2t)</m>. This kind of solution is called an <term>analytic solution</term>, or sometimes a <term>closed-form solution</term>. It is valuable because it expresses <m>y(t)</m> as a formula-like structure that you can plug in any value of <m>t</m> and instantly get the exact <m>y</m>-value.
	</p>

	<p>
		However, many differential equations, such as
	</p>

	<me>
		y' = e^{-y^2}, \quad y(0) = 0.
	</me>

	<p>
		simply don't have a tidy closed-form solution. In those cases, we switch tools. Instead of searching for an exact formula, we use a <term>numerical method</term>. A numerical method doesn't hand you <m>y(t)</m> as a formula‚Äîit builds an <term>approximation</term>, one step at a time, starting from what you know and using the differential equation to predict what happens next. The result is a <term>numerical solution</term>.
	</p>

	<exercise label="whats-a-numerical-soln-chkpt-1">
		<title>üìñ‚ùìAnalytic Solution, AKA ‚Ä¶ </title>
		<statement>
			What is another name for an analytic solution?
		</statement>
		<choices randomize="yes">
			<choice correct="yes">
				<statement>
					Closed-form solution
				</statement>
				<feedback>
					Yes ,  a closed-form solution is another name for an analytic solution.
				</feedback>
			</choice>
			<choice>
				<statement>
					Approximate solution
				</statement>
				<feedback>
					No ,  an approximate solution refers to a numerical solution.
				</feedback>
			</choice>
			<choice>
				<statement>
					Continuous solution
				</statement>
				<feedback>
					Not all analytic solutions are continuous ,  and not all continuous solutions are analytic.
				</feedback>
			</choice>
			<choice>
				<statement>
					Systematic solution
				</statement>
				<feedback>
					While you may solve analytically using a systematic process, this is not a name for an analytic solution.
				</feedback>
			</choice>
		</choices>
		<feedback>
			Analytic means a symbolic expression using functions, not a numerical approximation or a rule.
		</feedback>
	</exercise>

	<paragraphs label="whats-a-numerical-soln-analytic-vs-numerical">
		<title>Analytic vs. Numerical Solutions</title>

		<p>
			To see the difference between analytic and numerical solutions, consider the initial value problem:
		</p>

		<men xml:id="num-vs-anal-soln-eqn">
			y' = y, \quad y(0) = 1, \quad 0 \le t \le 2
		</men>

		<p>
			Analytically, this equation has the elegant solution:
		</p>

		<sidebyside widths="50% 8% 36% 6%" valign="middle">
			<p>
				<me>y(t) = e^t</me>.
				With this formula, you can calculate the exact value at <em>any</em> time. For example, <m>t = 0.65</m> gives
				<me>y(0.65) = e^{0.65} \approx 1.915540829...</me>.
			</p>
			<p/>
			<p>
				<> temporarily omitted </>
			</p>
			<p/>
		</sidebyside>

		<p>
			The same equation can also be solved numerically. Instead of a formula, we produce a table of <m>t</m>-values and approximate <m>y</m>-values:
		</p>

		<sidebyside widths="40% 18% 36% 6%" valign="middle">
			<p>
				<tabular halign="center">
					<col right="minor" />
					<row bottom="minor"><cell><m>t</m></cell><cell><m>y(t)</m> (approx)</cell></row>
					<row><cell>0.00</cell><cell>1.0000</cell></row>
					<row><cell>0.25</cell><cell>1.2500</cell></row>
					<row><cell>0.50</cell><cell>1.5625</cell></row>
					<row><cell>0.75</cell><cell>1.9531</cell></row>
					<row><cell>‚Ä¶</cell><cell>‚Ä¶</cell></row>
				</tabular>
			</p>
			<p>
				<line>Plot the</line>
				<line>points <m>\rightarrow</m></line>
			</p>
			<p>
				<> temporarily omitted </>
			</p>
			<p/>
		</sidebyside>

		<exercise label="whats-a-numerical-soln-chkpt-2">
			<title>üìñ‚ùìRecognizing a Numerical Solution</title>
			<statement>
				When you say you've found a <q>numerical solution</q> to an initial value problem, what do you actually have?
			</statement>
			<choices randomize="yes">
				<choice correct="yes">
					<statement>A list of values approximating <m>y(t)</m> at specific times</statement>
					<feedback>Correct‚Äînumerical solutions are tables of approximate values, not formulas.</feedback>
				</choice>
				<choice>
					<statement>A formula expressing <m>y(t)</m> using functions like <m>\sin t</m> or <m>e^t</m></statement>
					<feedback>No, that describes an analytic solution.</feedback>
				</choice>
				<choice>
					<statement>An exact solution valid for all <m>t</m></statement>
					<feedback>No, numerical solutions are approximations.</feedback>
				</choice>
				<choice>
					<statement>A graph showing all possible solutions</statement>
					<feedback>No, that describes a slope field, not a numerical solution.</feedback>
				</choice>
			</choices>
		</exercise>

		<p>
			The analytic solution gives a smooth curve for every <m>t</m>. The numerical solution gives <em>dots</em>‚Äîa sequence of approximations. Connect those dots and you get a picture of the solution's shape, even though no formula was found.
		</p>

		<note label="whats-a-numerical-soln-process-precision-v-practical">
			<title>Precision vs Practicality</title>
			<p>
				Numerical solutions are <em>approximations</em>. They carry small errors, but in exchange, they let us handle equations that analytic methods can't touch. This trade-off between perfect precision and practical usefulness is at the heart of numerical methods.
			</p>
		</note>

		<table label="whats-a-numerical-soln-analytic-v-numerical-note">
			<title>Analytic vs. Numerical Solution Summary</title>
			<tabular halign="center">
				<col width="30%" right="minor" />
				<col width="30%" right="minor" />
				<col width="30%" right="minor" />
				<row bottom="minor">
					<cell/>
					<cell><p> <m>\textbf{Analytic Solutions}</m> </p></cell>
					<cell><p> <m>\textbf{Numerical Solutions}</m> </p></cell>
				</row>
				<row>
					<cell><p> <m>\textbf{Also Known As}</m> </p></cell>
					<cell><p> Closed-form solutions </p></cell>
					<cell><p> Approximate solutions </p></cell>
				</row>
				<row>
					<cell><p> <m>\textbf{Looks Like}</m> </p></cell>
					<cell><p> <m>y = </m> formula in <m>t</m> </p></cell>
					<cell><p> Table of <m>t</m> &amp; <m>y</m> values </p></cell>
				</row>
				<row>
					<cell><p> <m>\textbf{Solution Values}</m> </p></cell>
					<cell><p> Exact </p></cell>
					<cell><p> Approximate </p></cell>
				</row>
				<row bottom="minor">
					<cell><p> <m>\textbf{Solution Graph}</m> </p></cell>
					<cell><p> Curve </p></cell>
					<cell><p> Points </p></cell>
				</row>
			</tabular>
		</table>
	</paragraphs>

	<paragraphs label="whats-a-numerical-soln-why-approximate">
		<title>Why Do We Need Numerical Methods?</title>
		<p>
			At first glance, analytic solutions might seem <q>better</q> than numerical ones. But there are important reasons why numerical methods aren't just useful‚Äîthey're essential:
		</p>

		<ol>
			<li>Many equations simply don't have a closed-form solution.</li>
			<li>Even when they do, the formula might be so complicated it's impractical.</li>
			<li>Numerical methods are easier to tweak if the model or data changes.</li>
		</ol>

		<exercise label="whats-a-numerical-soln-chkpt-3">
			<title>üìñ‚ùìWhy use numerical methods?</title>
			<statement>Which of the following are good reasons to use a numerical method?</statement>
			<choices randomize="yes" select="multiple">
				<choice correct="yes">
					<statement>They can approximate a solution when no closed-form solution exists.</statement>
					<feedback>True‚Äîsometimes they're the only option.</feedback>
				</choice>
				<choice correct="yes">
					<statement>They can be automated on a computer.</statement>
					<feedback>True‚Äîthey're ideal for computer simulations.</feedback>
				</choice>
				<choice correct="yes">
					<statement>They are easier to adjust when the equation changes.</statement>
					<feedback>True‚Äînumerical methods adapt easily to model tweaks.</feedback>
				</choice>
				<choice>
					<statement>They produce more accurate solutions than analytic methods.</statement>
					<feedback>No‚Äîanalytic solutions are exact when they exist.</feedback>
				</choice>
			</choices>
		</exercise>
	</paragraphs>

	<assemblage label="whats-a-numerical-soln-wrap-up">
		<title>üì§ Wrap-Up</title>
		<p>
			<paragraphs label="whats-a-numerical-soln-takeaways">
				<title>üóùÔ∏è Key Takeaways..</title>
				<ul marker="square">
				   	<li>Analytic solutions give formulas; numerical solutions give a list of values.</li>
					<li>Analytic solutions are exact; numerical solutions are approximate.</li>
					<li>Numerical solutions are essential when analytic solutions are too complicated or don't exist.</li>
				</ul>
			</paragraphs>
		</p>
	</assemblage>
</section>

<section label="eulers-method-one-step">
    <title>Thinking in Steps: How Euler's Method Works One Step at a Time</title>

    <introduction>
		<p>
			This shift towards numerical approximation is not just a workaround but a powerful approach that expands our capacity to solve differential equations arising in complex systems where exact solutions are not readily derivable. Euler's method, as we will see, is the entry point into this expansive field of computational mathematics, demonstrating how straightforward concepts can approximate solutions to complex problems.
		</p>
    </introduction>

    <paragraphs label="eulers-method-one-step-thinking">
        <title>Iterative Methods‚ÄîThinking in Steps</title>
		<p>
            Most numerical methods are <em>iterative</em>, which means they don't try to solve the whole problem at once. Instead, they repeat the same small task again and again. 
        </p>

        <p>
            That task is simple: use the information you already have to generate new information. Do it once, you get the next step. Do it a hundred times, you build a whole solution. 
        </p>

        <p>
            So, the key to understanding an iterative method is by learning its task.  
        </p>

		<exercise label="eulers-method-one-step-cyu-iterative">
			<title>üìñ‚ùì What does <q>iterative</q> mean?</title>
			<statement>
				<p>
					Euler's method (and most numerical methods) are described as <em>iterative</em>. What does that mean in practice?
				</p>
			</statement>
			<choices randomize="yes">
				<choice correct="yes">
					<statement>It repeats a single simple step many times to build up a solution.</statement>
					<feedback>Correct ‚Äî iterative methods loop the same calculation to generate new information.</feedback>
				</choice>
				<choice>
					<statement>It always produces the exact solution in one step.</statement>
					<feedback>No ‚Äî that's the opposite of iterative thinking. Iteration builds up an approximate solution step by step.</feedback>
				</choice>
				<choice>
					<statement>It skips steps and jumps straight to the final answer.</statement>
					<feedback>No ‚Äî iterative methods never <q>skip.</q> They accumulate results step by step.</feedback>
				</choice>
				<choice>
					<statement>It uses only algebra, not calculus, to solve equations.</statement>
					<feedback>Not quite ‚Äî Euler's method uses the slope from calculus, but applies it in a repetitive way.</feedback>
				</choice>
			</choices>
		</exercise>
    </paragraphs>

    <paragraphs label="eulers-method-one-step-task">
        <title>Euler's Method Task</title>
        <p>
            For Euler's method, the repeated task can be summed up like this:
        </p>

		<sidebyside margins="6% 6%">
			<p><q>from a known point, move to a nearby point along the direction of the slope.</q></p>
		</sidebyside>

        <p>
            Think of following a hiking trail using only a compass‚Äîyou don't know exactly where the trail ends, but if you keep stepping in the right direction, you'll trace the path. In Euler's method, that <q>direction</q> is the slope from the differential equation.  
        </p>

        <p>
            More precisely, if <m>(t_{\text{cur}}, y_{\text{cur}})</m> is a point on the solution and you know the slope there, you can predict where the next point <m>(t_{\text{new}}, y_{\text{new}})</m> will be. 
        </p>

        <p>
            To understand this <q>one step,</q> we'll answer two guiding questions:
        </p>

        <ol>
            <li>What does it mean to move in the direction of a slope?</li>
            <li>Given a point, slope, and step size, what is the formula for the next point?</li>
        </ol>
	</paragraphs>

    <subsection label="eulers-method-one-step-direction">
        <title>Moving in the Direction of a Slope</title>
		<p>
			First question: <q>What does it mean to move in the direction of a slope?</q>  
			Suppose you're at the point <m>(1,1)</m> and the slope there is <m>\frac{3}{2}</m>.
		</p>

		<p>
			Slope is <q>rise over run</q>: for every unit you move horizontally (<q>run</q>), you move a certain amount vertically (<q>rise</q>). From <m>(1,1)</m>, a slope of <m>\frac{3}{2}</m> means that for every 2 units of <q>run,</q> you rise 3 units, like so:
			<me>
				(1 + \text{run}, 1 + \text{rise}) = (1 + 2, 1 + 3) = (3,4)
			</me>.
		</p>

		<p>
			So moving from <m>(1,1)</m> in a direction with slope <m>\frac{3}{2}</m>, lands you at <m>(3,4)</m>. See <xref ref="multiple-rise-run-a"/>.
		</p>

		<note>
			<title><q>Rise</q> Clarification</title>
			<p>
				<q>Rise</q> doesn't always mean <q>up</q>‚Äîif the slope is negative, <q>rise</q> is actually a fall. We'll keep calling it <q>rise</q> for simplicity, but remember it might point downward.
			</p>
		</note>

		<p>
			Of course, there's nothing special about using a <q>run</q> of 2. We could have used <m>4</m> (rise would then be 6) or even <m>\pi</m> (rise would be <m>\frac{3}{2}\pi</m>). All of the following fractions
		</p>

		<me>
			\left(\frac{\text{rise}}{\text{run}}\right)\quad\quad \frac32,\ \frac{6}{4},\ \frac{3\pi}{2\pi},\ \frac{\frac32}{1},\ \ldots,
		</me>

		<p>
			describe the same slope, which can be visualized in <xref ref="multiple-rise-run"/>.
		</p>

		<p>
			In Euler's method, we intentionally choose a <em>small run</em> called the step size, <m>h</m>. Therefore, for a small run, <m>h</m>, you get the corresponding rise by:  
		</p>

		<me>
			\text{slope} = \frac{\text{rise}}{h}  \quad\Rightarrow\quad \text{rise} = \text{slope} \times h 
		</me>

		<p>
			So given a direction (slope) to move and the step size (<m>h</m>) to take, this formula gives you the rise. Next, we'll see how this simple relationship is the core of Euler's one-step move.
		</p>

		<me>
			\text{rise} = \text{slope} \cdot h.
		</me>

		<figure xml:id="multiple-rise-run">
			<caption>Same Slope, Different Rise and Runs</caption>
			<sidebyside widths="7.6% 23.4% 6% 25% 6% 24.6% 7.4%" valign="top">
				<p/>
				<figure xml:id="multiple-rise-run-a"><caption>Rise <m>3</m>, run <m>2</m></caption>
					<> temporarily omitted </>
				</figure>
				<p/>
				<figure xml:id="multiple-rise-run-b"><caption>Rise <m>\frac32</m>, run <m>1</m></caption>
					<> temporarily omitted </>
				</figure>	
				<p/>
				<figure xml:id="multiple-rise-run-c"><caption>Rise <m>mh</m>, run <m>h</m></caption>
					<> temporarily omitted </>
				</figure>
				<p/>
			</sidebyside>
		</figure>

		<exercise label="eulers-method-one-step-cyu-rise-calc">
			<title>üìñ‚ùì Calculating the Rise</title>
			<statement>
				<p>
					Suppose the slope at a point is <m>m = \frac{3}{2}</m> and you take a step size of <m>h = 0.2</m>. What is the <q>rise</q> over that step?
				</p>
			</statement>
			<choices randomize="yes">
				<choice correct="yes">
					<statement><m>0.3</m></statement>
					<feedback>Yes ‚Äî rise = slope √ó step size = <m>\frac{3}{2} \times 0.2 = 0.3</m>.</feedback>
				</choice>
				<choice>
					<statement><m>1.5</m></statement>
					<feedback>That's the slope itself, not the rise for the small step.</feedback>
				</choice>
				<choice>
					<statement><m>0.2</m></statement>
					<feedback>That's the step size (run), not the rise.</feedback>
				</choice>
				<choice>
					<statement><m>3.2</m></statement>
					<feedback>Double-check the multiplication ‚Äî slope √ó step size is much smaller.</feedback>
				</choice>
			</choices>
		</exercise>

	</subsection>

    <subsection label="eulers-method-one-step-rule">
        <title>The Movement Rule</title>

        <p>
            Now that we've decided how to take a step, we can write it as a formula. 
        </p>

        <p>
            From basic geometry, a new point is just the old point plus the changes:
        </p>

        <me>
            (t_{\text{new}}, y_{\text{new}}) = (t_{\text{cur}} + \text{run}, \ y_{\text{cur}} + \text{rise})
        </me>.

        <p>
            Euler's method sets the <q>run</q> to the step size <m>h</m> and the <q>rise</q> to <m>h \times \text{slope}</m>. Substituting those gives the update rule:
        </p>

        <men xml:id="point-slope-movement-rule">
            (t_{\text{new}}, y_{\text{new}}) = (t_{\text{cur}} + h,\ y_{\text{cur}} + h \times \text{slope})
        </men>.

     	<p>
            This single equation captures the whole one-step task: start at the current point, find the slope, take a step of size <m>h</m> in that direction, and you land at the next point. Euler's method is simply this step repeated many times.
        </p>

		<exercise label="eulers-method-one-step-cyu-rule-concept">
			<title>üìñ‚ùì Understanding the Movement Formula</title>
			<statement>
				<p>
					What does the term <q><m>h \times \text{slope}</m></q> represent in Euler's movement rule?
				</p>
			</statement>
			<choices randomize="yes">
				<choice correct="yes">
					<statement>The change in <m>y</m> over the chosen step.</statement>
					<feedback>Correct ‚Äî the slope tells the direction, and <m>h</m> scales it into a small <q>rise.</q></feedback>
				</choice>
				<choice>
					<statement>The next <m>t</m> value.</statement>
					<feedback>No ‚Äî the <m>t</m> update is handled separately as <m>t_{\text{cur}} + h</m>.</feedback>
				</choice>
				<choice>
					<statement>The slope of the entire solution curve.</statement>
					<feedback>Careful ‚Äî this is the slope at a single point, not the whole curve.</feedback>
				</choice>
				<choice>
					<statement>The error made by Euler's method in each step.</statement>
					<feedback>Not true ‚Äî <m>h \times \text{slope}</m> is the predicted rise, not the error.</feedback>
				</choice>
			</choices>
		</exercise>

	</subsection>

	<assemblage label="eulers-method-one-step-wrap-up">
		<title>üì§ Wrap-Up</title>
		<p>
			<paragraphs label="eulers-method-one-step-takeaways">
				<title>üóùÔ∏è Key Takeaways..</title>
				<ul marker="square">
				    <li>Numerical methods like Euler's are iterative: they repeat one simple step to build a full solution.</li>
                    <li>Euler's one-step task is <q>move from where you are in the direction of the slope.</q></li>
                    <li>Choosing a step size <m>h</m> sets the <q>run,</q> and the <q>rise</q> is just <m>\ul{\text{slope} \times h}</m>.</li>
                    <li>Euler's method is based on the movement rule <me>(t_{\text{new}}, y_{\text{new}}) = (t_{\text{cur}} + h,\ y_{\text{cur}} + h \times \text{slope})</me>.</li>
                </ul>
			</paragraphs>

			<paragraphs label="eulers-method-one-step-cyu">
				<title>Check Your Understanding</title>
				<exercise label="eulers-method-one-step-cyu-summary">
					<title>üìñ‚ùì Big Picture of Euler's Step</title>
					<statement>
						<p>
							Which statement best describes what Euler's method does <em>one step at a time</em>?
						</p>
					</statement>
					<choices randomize="yes">
						<choice correct="yes">
							<statement>From a current point, it uses the slope to predict the next point.</statement>
							<feedback>Correct ‚Äî Euler's method is nothing more than this step, done over and over.</feedback>
						</choice>
						<choice>
							<statement>It finds one term of the exact general solution.</statement>
							<feedback>No ‚Äî finding terms of the solution would be an analytic method.</feedback>
						</choice>
						<choice>
							<statement>It moves to a nearby point on the solution curve.</statement>
							<feedback>No ‚Äî if you knew where the solution curve was, you would already have the solution to the equation.</feedback>
						</choice>
						<choice>
							<statement>It approximates the roots of the characteristic equation.</statement>
							<feedback>No ‚Äî Euler's approximates points of the solution, not the roots of the characteristic equation.</feedback>
						</choice>
					</choices>
				</exercise>
			</paragraphs>
		</p>
	</assemblage>
</section>

<section label="eulers-method-full">
	<title>Euler's Method: The Full Process</title>

	<introduction>
        <p>
            In the previous section, we zoomed in on the single <q>step</q> at the heart of Euler's method: move forward by a small amount <m>h</m> in <m>t</m>, and adjust <m>y</m> by <m>h</m> times the slope. Now we'll zoom out. By repeating that step again and again, we can march across an interval, building an approximate solution point by point.
        </p>
	</introduction>

	<subsection label="eulers-method-concrete">
		<title>A Concrete Step Through Euler's Method</title>
		<p>
			Before writing any formulas, it helps to <em>see</em> what Euler's Method feels like. Think of Euler's method like crossing a landscape with only a compass. You know where you start. At each step, you check your direction (the slope from the differential equation), take a small stride that way, then check again. That back-and-forth of <q>step, check, adjust</q> is the rhythm of the method.
        </p>

		<paragraphs>
			<title>The Goal</title>
			
			<p>
				Suppose we have the initial value problem
				<men xml:id="concrete-euler-eqn">
					y'(t) = 6t + y(t), \quad y(0) = -2, \quad t \text{ in } [0, 1.5]
				</men>.
				Let's approximate the solution at the equally-spaced <m>t</m>-values: <m>0, 0.5, 1, 1.5</m>. This tells us that our goal is to approximate the <m>y</m>-values at the following points:   
			</p>

			<me>
				\text{Approximation} = \big\{\ (\ 0\ ,\ ?\ ),\ (\ 0.5\ ,\ ?\ ),\ (\ 1\ ,\ ?\ ),\ (\ 1.5\ ,\ ?\ )\ \big\}
			</me>.

			<p>
				Luckily, the first <m>y</m> value is just the initial condition, <m>y(0) = -2</m>, so we add it to the list:
				<me>\text{Approximation} = \left\{\ (0,-2)\ ,\ (0.5,\ ?\ )\ ,\ (1,\ ?\ )\ ,\ (1.5,\ ?\ )\ \right\}</me>.
				Starting at <m>(0,-2)</m>, Euler's method finds the rest of the points, one-by-one.
			</p>
		</paragraphs>

		<paragraphs>
			<title>Approximating the Next Point</title>

			<p>
				From <m>(0, -2)</m>, we need to get to <m>(0.5,?)</m>. Clearly, the run is <m>0.5</m>, but we also need the slope for our movement direction. This comes directly from the differential equation:
				<me>
					\text{slope at}\ (0,-2)\ \os{\large t=0}{\quad\longrightarrow\quad} y'(0) = 6(0) + y(0) = -2
				</me>.
			</p>

			<p>
				Moving from <m>(0, -2)</m> with a slope of <m>-2</m> and a run of <m>0.5</m> is given by:
				<me>(0, -2) \rightarrow (0 + \text{run}, -2 + \text{slope} \times \text{run}) = (0.5, -2 + -2 \cdot 0.5) = (0.5, -3)</me>.
			</p>

			<p>
				Therefore, the next point is <m>(0.5, -3)</m> and our approximation list becomes:
				<me>\text{Approximation} = \left\{\ (0,-2)\ ,\ (0.5,-3)\ ,\ (1,\ ?\ )\ ,\ (1.5,\ ?\ )\ \right\}</me>.
			</p>
		</paragraphs>

		<paragraphs>
			<title>Approximating the Rest of the Points</title>

			<p>
				To get the third and fourth point, we just repeat what we just did.
			</p>

			<p>
				At <m>(0.5, -3)</m>, we get the slope from:
				<me>
					\text{slope at}\ (0.5, -3)\ \os{\large t=0.5}{\quad\longrightarrow\quad} y'(0.5) = 6(0.5) + y(0.5) = 3 + (-3) = 0
				</me>.
			</p>

			<p>
				Using this slope and the same run, we get the third point:
				<me>(0.5 + \text{run}, -3 + \text{slope} \times \text{run}) = (1, -3 + 0 \cdot 0.5) = (1, -3)</me>.
			</p>

			<p>
				Now we are at <m>(1, -3)</m> and the slope we move this time is:
				<me>
					\text{slope at}\ (1, -3)\ \os{\large t=0}{\quad\longrightarrow\quad} y'(1) = 6(1) + y(1) = 6 + (-3) = 3
				</me>.
			</p>

			<p>
				and our final point is given by:
				<me>(1 + \text{run}, -3 + \text{slope} \times \text{run}) = (1.5, -3 + 3 \cdot 0.5) = (1.5, -1.5)</me>.
			</p>

			<p>
				With this, our approximation is now complete:
				<me>\text{Approximation} = \left\{\ (0,-2)\ ,\ (0.5,-3)\ ,\ (1,-3)\ ,\ (1.5,-1.5)\ \right\}</me>.
			</p>

			<p>
				A plot of the process is given in <xref ref="eulers-method-concrete-table-plot"/>.
			</p>

			<figure xml:id="eulers-method-concrete-table-plot">
				<caption> (left) Euler's method approximation of the solution to <xref ref="concrete-euler-eqn"/> with step size <m>0.5</m>. (right) Plot of each point in the approximation. </caption>
				<sidebyside widths="30% 54%" margins="4% 4%" valign="middle">
					<p>
						<tabular>
							<col right="minor" halign="center"/>
							<col halign="center"/>
							<row bottom="minor">
								<cell><m>t</m></cell>
								<cell><m>y</m> (approx)</cell>
							</row>
							<row>
								<cell><m>0</m></cell>
								<cell><m>-2.0</m></cell>
							</row>
							<row>
								<cell><m>0.5</m></cell>
								<cell><m>-3.0</m></cell>
							</row>
							<row>
								<cell><m>1</m></cell>
								<cell><m>-3.0</m></cell>
							</row>
							<row>
								<cell><m>1.5</m></cell>
								<cell><m>-1.5</m></cell>
							</row>
						</tabular>
					</p>
					<p>
						< width="100%"> temporarily omitted </ width="100%">
					</p>
				</sidebyside>
			</figure>
		</paragraphs>

		<corollary><title><xref provisional="Work in Progress"/></title>
			<p><xref provisional="Work in Progress"/></p>
			<sidebyside widths="50% 50%" margins="0% 0%">
				<p>
					<me>
						y' = y + t, \quad y(0) = 1
					</me>
				</p>
				<interactive xml:id="euler-ivp-tool"
					platform="jsxgraph"
					aspect="1:1"
					dark-mode-enabled="yes"
					source="code/jsxgraph/eulers-method/euler-ivp-tool.js"
				>
					<sidebyside width="100%">
						<slate xml:id="euler-ivp-tool-plot1" surface="jsxboard" aspect="1:1" />
					</sidebyside>
					<static>
						< source="code/jsxgraph/img-labels/t.png" width="100%"> temporarily omitted </ source="code/jsxgraph/img-labels/t.png" width="100%">
					</static>
				</interactive>
			</sidebyside>
		</corollary>
	</subsection>

	<subsection label="eulers-method-definition">
		<title>Euler's Method</title>
			<p>
				Now let's generalize the concrete example. As we do, check the footnotes for the concrete version of each equation and step. 
			</p>

			<p>
				Consider an initial value problem:<fn><me>y'(t) = 6t + y(t), \quad y(0) = -2, \quad t\ \text{in}\ [0, 1.5]</me></fn>
				<me>
					y'(t) = f(t, y), \quad y(t_0) = y_0, \quad t\ \text{in}\  [t_0, t_N]
				</me>.
			</p>

			<p>
				We divide <m>[t_0, t_N]</m> into equally spaced values (a distance <m>h</m> apart):
				<fn>
					<me>
						\us{\ds t_0}{\us{\uparrow}{0}},\ 
						\us{\ds t_1}{\us{\uparrow}{0.5}},\ 
						\us{\ds t_2}{\us{\uparrow}{1}},\ 
						\us{\ds t_3}{\us{\uparrow}{1.5}}\qquad h = 0.5
					</me>
				</fn>
			</p>

			<me>
				t_0,\ t_1,\ t_2,\ \ldots,\ t_N, \quad\text{where}\quad t_{k+1} = t_k + h
			</me>

			<p>
				Using the shorthand <m>y_k = y(t_k)</m>, our goal is to approximate the points:
				<fn>
					<me>
						\text{Approximation} = \{\ (0,?),\ (0.5,?),\ (1,?),\ (1.5,?)\ \big\}
					</me>
				</fn>
        	</p>

			<me>
				(t_0, y_0), (t_1, y_1), \ldots, (t_N, y_N).
			</me>

			<p>
				The first point, <m>(t_0, y_0)</m>, is known since it is the initial condition. The remaining points are approximated using the <xref ref="point-slope-movement-rule" text="custom">movement rule</xref>, where <q>cur</q> is <m>k</m> and <q>new</q> is <m>k+1</m>:
			</p>

			<me>
				(t_{k+1},\ y_{k+1}) = (t_k + h,\ y_k + h\cdot\text{slope})
			</me>.

			<p>
				The slope is found from <m>f(t_k, y_k)</m><fn><me>6t + y(t)</me></fn> in the differential equation, so the rule becomes:
			</p>

			<me>
				(t_{k+1},\ y_{k+1}) = (t_k + h,\ y_k + h\cdot f(t_k, y_k)).
			</me>

			<p>
				Extracting just the <m>y</m>-coordinate, gives the update rule for Euler's method:
				<me>
					y_{k+1} = y_k + h\cdot f(t_k, y_k).
				</me>
			</p>

			<p>
				That's it. All of the <m>y</m> values in the table of <xref ref="eulers-method-concrete-table-plot"/> can be found with this formula.
			</p>

			<exercise label="eulers-method-chkpt-1">
				<title>Match Euler's Method Parts to their Meaning</title>
				<statement>
					<p>
						Assume the current approximation using Euler's Method is denoted by <m>y_k</m>. In this context, match the mathematical expression with its meaning.
					</p>
				</statement>
				<feedback>
					<p>
					These pairings are essential when converting a piecewise function into unit step form. The form you choose depends entirely on where each piece is active.
					</p>
				</feedback>
				<cardsort>
					<match>
						<premise><m>y_{k+1}</m></premise>
						<response>The <m>y</m> value of the next approximation.</response>
					</match>
					<match>
						<premise><m>y_{k-1}</m></premise>
						<response>The <m>y</m> value of the previous approximation.</response>
					</match>
					<match>
						<premise><m>h</m></premise>
						<response>The distance between <m>t_k</m> and <m>t_{k+1}</m>.</response>
					</match>
					<match>
						<premise><m>f(t_k, y_k)</m></premise>
						<response>The slope of the solution at the current approximation.</response>
					</match>
					<match>
						<premise><m>t_k</m></premise>
						<response>The <m>t</m> value of the current approximation.</response>
					</match>
					<match>
						<premise><m>h \cdot f(t_k, y_k)</m></premise>
						<response>The rise (or fall) in the <m>y</m> value from the current approximation to the next approximation.</response>
					</match>
				</cardsort>
			</exercise>

			<exploration xml:id="euler-method">
				<title>Euler's Method</title>
				<p>
					Given an initial value problem
				</p>
				<me>
					y' = f(t, y), \quad y(t_0) = y_0, \quad t_0 \le t \le t_N
				</me>
				<p>
					approximate the solution with the following steps:
				</p>
				<dl width="narrow">
					<li xml:id="eulers-method-step-1"><title>Select step size</title>
						<p>Choosing a step size <m>h</m> determines <m>t_0,\ t_1,\ t_2,\ ...,\ t_{N}</m> where <m>t_k = t_0 + kh</m> for <m>k = 0, 1, 2, ..., N</m>.</p>
					</li>
					<li xml:id="eulers-method-step-2"><title>Apply Euler's update rule</title>
						<p>
							For <m>k = 0</m> to <m>N - 1</m>, compute
							<me>
							y_{k+1} = y_k + h \cdot f(t_k, y_k).
							</me>
						</p>
					</li>
				</dl>
			</exploration>

			<p>
				Desipte being based on relatively simple idea, Euler's method reveals something profound: with nothing more than a starting point and slope formula, you can approximate a solution that no closed-form equation could describe.
			</p>
	</subsection>

	<subsection label="eulers-method-examples">
		<title>Examples</title>

		<example label="eulers-method-example-1">
			<title>Euler's Method Example</title>
			<statement>
				<p>
					Use Euler's method to approximate the solution to the differential equation
					<me>
						y' = t + y, \quad y(0) = -\frac{7}{8}
					</me>
					over the interval <m>[0, 1.5]</m> with a step size of <m>h = 0.5</m>.
				</p>
			</statement>

			<solution>

				<p>
					<xref ref="eulers-method-step-1" text="title"/>. The step size is <m>h = 0.5</m>, so the approximation locations are
					<m>t_0 = 0, t_1 = 0.5, t_2 = 1.0, t_3 = 1.5</m>.
				</p>

				<p>
					<xref ref="eulers-method-step-2" text="title"/>. The initial condition gives the first value in our approximation, <m>y_0 = -\frac{7}{8} = -0.875</m>.
				</p>

				<p>
					Now, we can use the formula
					<me>
						y_{k+1} = y_k + h\left(t_k + y_k\right)
					</me>
					to find <m>y_1</m>, <m>y_2</m> and <m>y_3</m> as follows:
				</p>

				<sidebyside widths="5% 8% 82% 5%" valign="middle">
					<p/>
					<p>
						<md>
							<mrow> \text{G}	\amp\text{iven} </mrow>
							<mrow> k		\amp = 0 </mrow>
							<mrow> k		\amp = 1 </mrow>
							<mrow> k		\amp = 2 </mrow>
						</md>
					</p>
					<p>
						<md>
							<mrow> y_0	\amp = -0.875 </mrow>
							<mrow> y_1	\amp = y_0 + h\left(t_0 + y_0\right) = -0.875 + 0.5\left(0 - 0.875\right) </mrow>
							<mrow> y_2	\amp = y_1 + h\left(t_1 + y_1\right) = -1.3125 + 0.5\left(0.5 - 1.3125\right) </mrow>
							<mrow> y_3	\amp = y_2 + h\left(t_2 + y_2\right) = -1.5625 + 0.5\left(1.0 - 1.5625\right) </mrow>
						</md>
					</p>
					<p/>
				</sidebyside>

				<p>
					The simplified calculations are summarized in the following table:
				</p>

				<tabular>
					<col right="minor" halign="center"/>
					<col right="minor" halign="left"/>
					<col halign="center"/>
					<row halign="center" bottom="minor">
						<cell><m>k</m></cell>
						<cell><m>t_k</m></cell>
						<cell><m>y_k</m></cell>
					</row>
					<row>
						<cell><m>0</m></cell>
						<cell><m>0.0</m></cell>
						<cell><m>-0.875</m></cell>
					</row>
					<row>
						<cell><m>1</m></cell>
						<cell><m>0.5</m></cell>
						<cell><m>-0.75</m></cell>
					</row>
					<row>
						<cell><m>2</m></cell>
						<cell><m>1.0</m></cell>
						<cell><m>-0.5</m></cell>
					</row>
					<row halign="center">
						<cell><m>3</m></cell>
						<cell><m>1.5</m></cell>
						<cell><m>-0.125</m></cell>
					</row>
				</tabular>

				<p>
					Thus, the approximate solution to the initial-value problem is
					<me>
						y(0) \approx -\frac{7}{8}, \quad y(0.5) \approx -\frac{3}{4}, \quad y(1.0) \approx -\frac{1}{2}, \quad y(1.5) \approx -\frac{1}{8}.
					</me>
				</p>

				<p>
					We can visualize the approximation by plotting the points <m>(t_k, y_k)</m> and connecting them with line segments. The exact solution to the initial-value problem is given by
					<me>
						y(t) = \frac{1}{8}e^t - t - 1.
					</me>
				</p>

				<p>
					The following plot shows the approximation and the exact solution.
				</p>

				< xml:id="sageplot-euler-approximation"> temporarily omitted </ xml:id="sageplot-euler-approximation">

				<p>
					The red curve is the exact solution, while the green points are the approximated values at <m>t = 0, 0.5, 1.0, 1.5</m>.
					The blue line segments connect the points in the approximation, showing how Euler's method steps through the solution.
				</p>

				<p>
					The following plot shows the approximation and the exact solution, with a grid for better visualization.
				</p>

				<p>
					< xml:id="sageplot-polynomial-approximation"> temporarily omitted </ xml:id="sageplot-polynomial-approximation">
				</p>

				< width="100%"> temporarily omitted </ width="100%">

				<p>
					<md>
						<mrow> y'(t_k) 										\amp = (y(t_k))^2 - t_k </mrow>
						<mrow> \frac{y(t_{k+1}) - y(t_k)}{h}	\amp = (y(t_k))^2 - t_k </mrow>
						<mrow> \frac{y_{k+1} - y_k}{h}	\amp = (y_k)^2 - t_k </mrow>
						<mrow> y(t_{k+1}) - y(t_k) 							\amp = h\left((y(t_k))^2 - t_k\right) </mrow>
						<mrow> y(t_{k+1}) 									\amp = y(t_k) + h\left((y(t_k))^2 - t_k\right) </mrow>
					</md>
				</p>
			</solution>
		</example>

		<example label="eulers-method-example-2">
			<title>Analytical and Numerical Solutions</title>
			<statement>
				<p>
					Consider the differential equation
					<me>
						y' + 4ty = 0, \, y(0) = 1
					</me>.
					<ol>
						<li>
							<p>
								Find the analytical solution to this equation using the method of separation of variables.
							</p>
						</li>
						<li>
							<p>
								Use Euler's method with a step size of <m>h = 0.1</m> to approximate the solution at <m>t = 0.5</m>. 
							</p>
						</li>
						<li>
							<p>
								Compare the analytical solution with the numerical approximation obtained from Euler's method.
							</p>
						</li>
					</ol>
				</p>
			</statement>

			<solution>
				<p>
					To solve the differential equation <me>y' + 4ty = 0</me> using the method of separation of variables, we separate the variables as follows:
					<me>
						\frac{dy}{y} = -4t \, dt
					</me>
					Integrating both sides gives:
					<me>
						\ln |y| = -2t^2 + C
					</me>
					Exponentiating both sides results in:
					<me>
						y = Ce^{-2t^2}
					</me>
					Since the initial condition, <m>y(0) = 1</m>, gives <m>C = 1</m>, the analytical solution is:
					<me>
						y(t) = e^{-2t^2}
					</me>
				</p>

				<p>
					Next, we apply Euler's method to approximate the solution at <m>t = 0.5</m>. The general formula for Euler's method is:
					<me>
						y_{k+1} = y_k + h f(t_k, y_k)
					</me>
					where <m>f(t, y) = -4ty</m> and <m>h=0.1</m>. So, we can update the formula as:
				</p>

				<me>
					y_{k+1} = y_k - 0.4 t_k y_k \quad \text{where}\ y_0 = 1.
				</me>

				<p>
					For <m>k = 0, 1, \ldots, 4</m>, we contruct the following table:
				</p>

				<tabular>
					<col halign="center" right="minor" />
					<col halign="center" right="minor" />
					<col halign="left" right="minor" />
					<col halign="left" />
					<row halign="center" bottom="minor">
						<cell><m>k</m></cell>
						<cell><m>t_k</m></cell>
						<cell><m>y_k</m></cell>
						<cell><m>y_{k+1}</m></cell>
					</row>
					<row>
						<cell><m>0</m></cell>
						<cell><m>0.0</m></cell>
						<cell><m>y_0 = {\DLBa 1}</m></cell>
						<cell><m>y_1 = {\DLBa 1} + 0.1(-4 \cdot 0.0 \cdot {\DLBa 1}) = {\DLGa 1}</m></cell>
					</row>
					<row>
						<cell><m>1</m></cell>
						<cell><m>0.1</m></cell>
						<cell><m>y_1 = {\DLBa 1}</m></cell>
						<cell><m>y_2 = {\DLBa 1} + 0.1(-4 \cdot 0.1 \cdot {\DLBa 1}) = {\DLGa 0.96}</m></cell>
					</row>
					<row>
						<cell><m>2</m></cell>
						<cell><m>0.2</m></cell>
						<cell><m>y_2 = {\DLBa 0.96}</m></cell>
						<cell><m>y_3 = {\DLBa 0.96} + 0.1(-4 \cdot 0.2 \cdot {\DLBa 0.96}) = {\DLGa 0.8832}</m></cell>
					</row>
					<row halign="center">
						<cell><m>3</m></cell>
						<cell><m>0.3</m></cell>
						<cell><m>y_3 = {\DLBa 0.8832}</m></cell>
						<cell><m>y_4 = {\DLBa 0.8832} + 0.1(-4 \cdot 0.3 \cdot {\DLBa 0.8832}) \approx {\DLGa 0.7772}</m></cell>
					</row>
					<row halign="center">
						<cell><m>4</m></cell>
						<cell><m>0.4</m></cell>
						<cell><m>y_4 = {\DLBa 0.7772}</m></cell>
						<cell><m>y_5 = {\DLBa 0.7772} + 0.1(-4 \cdot 0.4 \cdot {\DLBa 0.7772}) \approx {\DLGa 0.6529}</m></cell>
					</row>
				</tabular>

				<p>
					Since <m>t_5=0.5</m>, the approximation we are looking for is <m>y_5 \approx 0.6529</m>.
				</p>

				<p>
					Comparing this with the analytical solution at <m>t = 0.5</m>, we see the true value is:
					<me>
						y(0.5) = e^{-2(0.5)^2} = e^{-0.5} \approx 0.6065.
					</me>
					Although there is some error between the two values, it is more due to the step size we chose, rather than the method itself. A smaller step size would yield a more accurate approximation. For example, using <m>h = 0.001</m> gives the approximation: <m>y(0.5) \approx 0.6069</m>. 
				</p>
			</solution>
		</example>

		<example label="eulers-method-example-3">
			<title>Example: Euler's Method with <m>h = 0.5</m></title>
		<statement>
			<p>
				Use Euler's method to approximate the solution to
				<me>
				y'(t) = 6t + y(t), \quad y(0) = -2
				</me>
				over <m>t = 0</m> to <m>1.5</m> using step size <m>h = 0.5</m>.
			</p>
		</statement>
		<solution>
			<p>The formula is:</p>
			<me>
			y_{k+1} = y_k + 0.5 \cdot (6t_k + y_k)
			</me>
			<tabular>
			<col right="minor" /><col /><col /><col />
			<row bottom="minor">
				<cell><m>k</m></cell>
				<cell><m>t_k</m></cell>
				<cell><m>y_k</m></cell>
				<cell><m>y_{k+1} = y_k + 0.5(6t_k + y_k)</m></cell>
			</row>
			<row>
				<cell>0</cell><cell>0.0</cell><cell>-2.0</cell><cell>-3.0</cell>
			</row>
			<row>
				<cell>1</cell><cell>0.5</cell><cell>-3.0</cell><cell>-3.0</cell>
			</row>
			<row>
				<cell>2</cell><cell>1.0</cell><cell>-3.0</cell><cell>-1.5</cell>
			</row>
			</tabular>
			<p>Thus, the approximate values are:</p>
			<me>
			y(0) \approx -2,\quad y(0.5) \approx -3,\quad y(1.0) \approx -3,\quad y(1.5) \approx -1.5
			</me>
		</solution>
		</example>
	</subsection>

	<p>
		Euler's method runs on an intuitive idea: use the slope at each point to <q>predict</q> the next point. It's simple, but that simplicity is its strength. This method is often the first stepping stone into the world of numerical methods and the same pattern of <q>predict, step, repeat</q> forms the backbone of many other techniques.
	</p>

	<assemblage label="eulers-method-wrap-up">
		<title>üì§ Wrap-Up</title>
		<p>
			<paragraphs label="eulers-method-takeaways">
				<title>üóùÔ∏è Key Takeaways..</title>
				<ul marker="square">
					<li>Euler's Method turns slope information into a sequence of small steps forward.</li>
                    <li>Each step uses the simple rule: <m>y_{k+1} = y_k + h f(t_k, y_k)</m>.</li>
					<li>Smaller step sizes usually mean better accuracy ‚Äî but more steps.</li>
					<li>This method is the foundation for more advanced numerical techniques.</li>
				</ul>
			</paragraphs>
		</p>
	</assemblage>
</section>