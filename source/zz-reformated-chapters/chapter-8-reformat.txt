<METADATA>
  <title> Linear Nonhomogeneous Constant Coefficient Equations & Undetermined Coefficients </title>
  <label>chap-lncc-uc</label>
  <overview>Introduces linear nonhomogeneous constant coefficient (LNCC) equations, explains how their solutions combine homogeneous and particular parts, and teaches the Method of Undetermined Coefficients to systematically find the particular solution.</overview>
  <dependencies>Builds on understanding of LHCC equations (Chapter 5) and requires knowledge of characteristic equations, exponentials, sines, cosines, and algebraic manipulation.</dependencies>
</METADATA>

<overview>
  <p>When the right-hand side of a linear constant coefficient equation is not zero, we enter the world of LNCC equations. This chapter explains how their solutions combine a homogeneous part that cancels and a particular part that accounts for the forcing function. Then, we introduce the Method of Undetermined Coefficients — a systematic way to find that particular solution when the forcing function has the right form.</p>
</overview>

<objectives>
  <ul>
    <li>Identify the structure of LNCC equations and distinguish them from LHCC equations.</li>
    <li>Understand the general solution structure <m>y = y_h + y_p</m>.</li>
    <li>Choose and modify the form of <m>y_p</m> to match the forcing function.</li>
    <li>Apply the Method of Undetermined Coefficients to solve for unknown constants in <m>y_p</m>.</li>
    <li>Solve LNCC equations with polynomial, exponential, sine, cosine, or combined forcing functions.</li>
  </ul>
</objectives>

<core-narrative>

  <section label="lncc-intro">
    <title> Understanding LNCC Equations </title>
    <overview>Defines LNCC equations, explains the role of the forcing function, and introduces the concept of combining homogeneous and particular solutions.</overview>

    <examples>
      <example role="lncc-definition">
        <title> Homogeneous vs. Nonhomogeneous </title>
        <statement>Identify which part of the equation indicates it is nonhomogeneous.</statement>
      </example>
      <example role="lncc-solution-structure">
        <title> Breaking a Solution into Parts </title>
        <statement>Show that any solution can be written as y = y_h + y_p.</statement>
      </example>
    </examples>

    <section-summary>
      <ul>
        <li>An LNCC equation has the same left-hand structure as an LHCC but with a non-zero forcing function on the right.</li>
        <li>Solutions split into two pieces: <m>y_h</m> from the homogeneous part, and <m>y_p</m> that matches the forcing function.</li>
        <li>The general solution is always <m>y = y_h + y_p</m>.</li>
      </ul>
    </section-summary>
  </section>

  <section label="lncc-particular-forms">
    <title> Selecting the Form of the Particular Solution </title>
    <overview>Guides how to choose a candidate form for <m>y_p</m> by matching the structure of the forcing function, handling sums, products, and when modification is needed.</overview>

    <examples>
      <example role="yp-form-table">
        <title> Choosing y_p for Different Forcing Functions </title>
        <statement>Match polynomials, exponentials, and trig functions to the correct initial guess for <m>y_p</m>.</statement>
      </example>
      <example role="modification-example">
        <title> Modifying Overlapping Terms </title>
        <statement>Demonstrate multiplying by x when y_p shares terms with y_h.</statement>
      </example>
    </examples>

    <section-summary>
      <ul>
        <li>Match y_p's structure to the forcing function (polynomial, exponential, sine/cosine).</li>
        <li>If f(x) is a sum, y_p should be the sum of the matching forms. If f(x) is a product, y_p should be the product.</li>
        <li>When y_p overlaps with y_h, multiply the overlapping part by x until independence is achieved.</li>
      </ul>
    </section-summary>
  </section>

  <section label="uc-method">
    <title> Method of Undetermined Coefficients </title>
    <overview>Presents the step-by-step process to determine the coefficients in y_p, plug it in, and match terms.</overview>

    <examples>
      <example role="uc-basic-example">
        <title> Polynomial Forcing Function </title>
        <statement>Find y_p for y'' - 2y' + y = 2x^2 + 3x and solve for A, B, C.</statement>
      </example>
      <example role="uc-exponential-example">
        <title> Exponential Forcing Function </title>
        <statement>Handle y_p when f(x) = e^{2x} and modification is needed.</statement>
      </example>
      <example role="uc-trig-example">
        <title> Trig Forcing Function </title>
        <statement>Apply the method when f(x) = cos(2x) and collect like terms.</statement>
      </example>
    </examples>

    <section-summary>
      <ul>
        <li>Write y = y_h + y_p.</li>
        <li>Find y_h using the characteristic equation.</li>
        <li>Guess y_p and modify if needed.</li>
        <li>Plug in y_p, simplify, match coefficients, and solve for unknowns.</li>
        <li>Combine y_h and y_p, then apply initial conditions if provided.</li>
      </ul>
    </section-summary>
  </section>

  <section label="uc-advanced">
    <title> Advanced Applications </title>
    <overview>Shows how to manage more complex forcing functions, like products of polynomials with trig or exponential terms, and forcing functions that require multiple modifications.</overview>

    <examples>
      <example role="uc-product-example">
        <title> Forcing Function as a Product </title>
        <statement>Solve when f(x) = x^2 e^{3x} by combining product forms and modifying overlapping terms.</statement>
      </example>
      <example role="uc-combo-example">
        <title> Sum of Forms </title>
        <statement>Solve when f(x) = e^{4x} + sin(3x) by adding matching y_p guesses.</statement>
      </example>
    </examples>

    <section-summary>
      <ul>
        <li>Complex forcing functions often require combining or multiplying y_p forms.</li>
        <li>Always check for and eliminate overlap with y_h.</li>
        <li>The method remains consistent regardless of complexity: guess, modify, substitute, match coefficients.</li>
      </ul>
    </section-summary>
  </section>

</core-narrative>

<cheatsheet>
  <formula>General Solution: y = y_h + y_p</formula>
  <workflow>1️⃣ Solve homogeneous → 2️⃣ Guess y_p → 3️⃣ Modify if needed → 4️⃣ Substitute y_p → 5️⃣ Match coefficients → 6️⃣ Combine y_h + y_p</workflow>
  <alerts>Only works when f(x) is made from polynomials, exponentials, sines, cosines, or their sums/products. Use another method for ln(x), tan(x), etc.</alerts>
</cheatsheet>

