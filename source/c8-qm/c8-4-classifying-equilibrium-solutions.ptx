<section><title> Classifying Equilibrium Solutions </title>
	<introduction>
		<p>
			Equilibrium solutions mark the places where a system comes to rest. But not all equilibrium solutions are alikeâ€”some attract nearby solutions, others repel them, and some do a bit of both. In this section, we'll learn how to classify these points by examining the slope field, the sign of <m>f(y)</m>, and a one-dimensional tool called a <term>phase line</term>.
		</p>
	</introduction>

	<paragraphs><title> Types of Equilibria </title>

		<p>
			Suppose <m>y = c</m> is an equilibrium solution of an autonomous equation <m>y' = f(y)</m>. If a solution starts slightly above or below <m>c</m>, it will either move toward <m>c</m>, move away from <m>c</m>, or behave differently on either side.
		</p>

		<p>
			Here are the three most common types:
		</p>

		<ul>
			<li><strong>Stable (sink):</strong> Nearby solutions move <em>toward</em> the equilibrium from both sides.</li>
			<li><strong>Unstable (source):</strong> Nearby solutions move <em>away</em> from the equilibrium on both sides.</li>
			<li><strong>Semi-stable (node):</strong> Solutions approach from one side and move away on the other.</li>
		</ul>

		<p>
			In the slope field, a sink looks like arrows converging toward a horizontal line. A source looks like arrows diverging away. And a node has a mix: converging from one side, diverging from the other. We'll see how to identify each of these from the function <m>f(y)</m> or its graph.
		</p>
	</paragraphs>

	<paragraphs><title> Classification via the Phase Line </title>
		<p>
			Slope fields are powerful but can get cluttered. Since autonomous equations have horizontal strip symmetry, we can compress all the slope information into a vertical number line showing only <m>y</m>-values. This diagram is called a <term>phase line</term>.
		</p>

		<p>
			On a phase line:
		</p>

		<ul>
			<li>equilibrium solutions are marked with solid dots.</li>
			<li>Regions where <m>f(y) &gt; 0</m> are marked with upward arrows.</li>
			<li>Regions where <m>f(y) &lt; 0</m> are marked with downward arrows.</li>
		</ul>

		<p>
			The arrows show how <m>y(t)</m> changes over time: whether it increases or decreases in each region. Following the arrows tells you where solutions go in the long run.
		</p>

		<figure xml:id="phase-line-plot">
			<caption>Slope Field (left) and Phase Line (right) for <m>y'= 1 - y^2</m></caption>
			<sidebyside widths="58.1% 1% 9%" valign="top" margins="15.8% 15.8%">
				<image>
					<latex-image>
						\begin{tikzpicture}[declare function={f(\x,\y) = (1-\y) * (1+\y);}, scale=0.7]

							\pgfkeys{/pgf/number format/.cd,
								fixed,
								precision=1
							}
							\def\tmin{-2.2}	\def\tmax{2.2}
							\def\ymin{-2.2} \def\ymax{2.2}
							\def\tstep{0.2}	\def\ystep{0.2}
							\def\arrowscale{0.17} % length of slope arrows
							\def\segmentwt{0.8pt} % thickness of slope segments

							% stepsize along t-axis and y-axis
							\pgfmathsetmacro{\tL}{\tmin + \tstep}
							\pgfmathsetmacro{\tR}{\tmax - \tstep}
							\pgfmathsetmacro{\yL}{\ymin + \ystep}
							\pgfmathsetmacro{\yR}{\ymax - \ystep}
							\pgfmathsetmacro{\nt}{(\tR-\tL)/\tstep}
							\pgfmathsetmacro{\ny}{(\yR-\yL)/\ystep}

							\draw[white, fill=red!10] (\tmin,\ymin) rectangle (\tmax,-1);
							\draw[white, fill=green!80!black!10] (\tmin,-1) rectangle (\tmax,1);
							\draw[white, fill=red!10] (\tmin,1) rectangle (\tmax,\ymax);

							\draw[white, fill=red!10] (\tmax + 0.05,1) rectangle (\tmax + 1.3,\ymax);
							\draw (\tmax+0.025,1.6) node[font=\tiny, right] {$f(y) \lt 0$};
							\draw[white, fill=green!80!black!10] (\tmax + 0.05,-1) rectangle (\tmax + 1.3,1);
							\draw (\tmax+0.025,0.0) node[font=\tiny, right] {$f(y) \gt 0$};
							\draw[white, fill=red!10] (\tmax + 0.05,\ymin) rectangle (\tmax + 1.3,-1);
							\draw (\tmax+0.025,-1.6) node[font=\tiny, right] {$f(y) \lt 0$};
							
							% Axes
							\draw[->] (\tmin, 0) -- (\tmax, 0) 
								node[xshift=-0.05cm, yshift=-0.05cm, font=\tiny, below] {};
							\draw[->] (0, \ymin) -- (0, \ymax+0.3)
								node[xshift= 0.05cm, yshift=-0.1cm, font=\tiny, right] {$y$};

							% Bounding box
							\draw[gray!50] (\tmin,\ymin) rectangle (\tmax,\ymax);

							% Tick marks and labels on t-axis
							\pgfmathtruncatemacro{\tLint}{\tL}
							\pgfmathtruncatemacro{\tRint}{\tR}
							\foreach \t in {\tLint,...,\tRint} {
								\draw (\t,\ymin-0.06) -- (\t,\ymin+0.06)
								node[font=\tiny, below] {\t};
							}

							% Tick marks and labels on y-axis
							\pgfmathtruncatemacro{\yLint}{\yL}
							\pgfmathtruncatemacro{\yRint}{\yR}
							\foreach \y in {-2, -1, 1, 2}
								\draw (\tmin-0.06,\y) -- (\tmin+0.06,\y)
								node[font=\tiny, left] {\y};

							% slope field: just draw a vector at each point
							\foreach \i in {0,...,\nt}
							\foreach \j in {0,...,\ny}{

								\pgfmathsetmacro{\tpt}{\tL + \i * \tstep}
								\pgfmathsetmacro{\ypt}{\yL + \j * \ystep}
								\pgfmathsetmacro{\slope}{f(\tpt,\ypt)}

								% Normalize direction vector (1, slope) to fixed length
								\pgfmathsetmacro{\len}{sqrt(1 + (\slope)^2)}
								\pgfmathsetmacro{\dt}{\arrowscale / \len}
								\pgfmathsetmacro{\dy}{\arrowscale * \slope / \len}

								\draw[teal!75, line width=\segmentwt, shift={(\tpt,\ypt)}] (-0.5*\dt, -0.5*\dy) -- (0.5*\dt, 0.5*\dy);
								%\draw[fill=white!50] (\tpt,\ypt) circle (1.5pt);
							}
						\end{tikzpicture}
					</latex-image>
				</image>
				<p/>
				<image>
					<latex-image>
						\begin{tikzpicture}[declare function={f(\x,\y) = (1-\y) * (1+\y);}, scale=0.7]

							\pgfkeys{/pgf/number format/.cd,
								fixed,
								precision=1
							}
							\def\tmin{0}	\def\tmax{0}
							\def\ymin{-2.5} \def\ymax{2.2}
							\def\tstep{0.2}	\def\ystep{0.2}
							\def\arrowscale{0.17} % length of slope arrows
							\def\segmentwt{0.8pt} % thickness of slope segments
							\def\eqpts{-1, 1} % equilibrium points
							\def\testpts{-1.8, 0.2, 1.6} % test points for classification

							\draw[white, fill=red!10] (\tmin-0.42,1) rectangle (\tmax+0.42,\ymax);
							\draw[white, fill=green!80!black!10] (\tmin-0.42,-1) rectangle (\tmax+0.42,1);
							\draw[white, fill=red!10] (\tmin-0.42,-2.2) rectangle (\tmax+0.42,-1);
							
							% stepsize along t-axis and y-axis
							\pgfmathsetmacro{\yL}{\ymin + \ystep}
							\pgfmathsetmacro{\yR}{\ymax - \ystep}
							\pgfmathsetmacro{\ny}{(\yR-\yL)/\ystep}

							% Axes
							\draw[->, thick] (0, \ymin) -- (0, \ymax+0.3)
								node[xshift= 0.05cm, yshift=-0.1cm, font=\tiny, right] {$y$};

							% Draw equilibrium points
							\foreach \eqpt in \eqpts {
								\draw[fill=black] (\tmin,\eqpt) circle (2pt);
								\draw (\tmin,\eqpt) node[font=\tiny, left] {\eqpt};
							}

							% Draw phase arrows
							\foreach \testpt in \testpts {
								\pgfmathsetmacro{\slope}{f(\tmin,\testpt)}
								\draw[teal!75, fill=white, line width=\segmentwt, arrows = {-Stealth[length=7pt, inset=2pt]}] (0,\testpt) -- (0,\testpt+0.01*\slope);
							}
						\end{tikzpicture}
					</latex-image>
				</image>
			</sidebyside>
		</figure>
		
		<example><title> Growth and Decay </title>
			<statement>
				<p>
					Find and classify the equilibrium solutions of the autonomous equation
					<me>
						\frac{dy}{dt} = y^2 - 4y
					</me>
				</p>
			</statement>
			<solution>

				<p>
					First, factor <m>f(y)</m> and set <m>f(y) = 0</m>:
					<me>
						f(y) = y^2 - 4y = y(y - 4) = 0,
					</me>
					to get the equilibrium solutions: <m>y(t) = 0</m> and <m>y(t) = 4</m>.
				</p>

				<p>
					This separates the <m>y</m>-axis into three regions, where we select test points to determine the sign of <m>f(y)</m> to produce the phase line:
				</p>

				<sidebyside widths="60% 10% 5%" valign="middle" margins="5% 15%">
					<p>
						<tabular halign="center">
							<col right="minor"/>
							<col right="minor"/>
							<col right="minor"/>
							<col/>
							<row bottom="minor">
								<cell>Region</cell>
								<cell>Test Point</cell>
								<cell><m>f(y) = y(y - 4)</m></cell>
								<cell>Sign of <m>f(y)</m></cell>
							</row>
							<row>
								<cell><m>(-\infty, 0)</m></cell>
								<cell><m>y = -1</m></cell>
								<cell><m>(-1)(-5) = 5</m></cell>
								<cell>Positive</cell>
							</row>
							<row>
								<cell><m>(0,4)</m></cell>
								<cell><m>y = 1</m></cell>
								<cell><m>(1)(-3) = -3</m></cell>
								<cell>Negative</cell>
							</row>
							<row>
								<cell><m>(4,\infty)</m></cell>
								<cell><m>y = 5</m></cell>
								<cell><m>(5)(1) = 5</m></cell>
								<cell>Positive</cell>
							</row>
						</tabular>
					</p>
					<p>
						<me>
							\rightarrow
						</me>
					</p>
					<p>
						<image>
							<latex-image>
								\begin{tikzpicture}[declare function={f(\x,\y) = \y * (\y-4);}, scale=0.2]

									\pgfkeys{/pgf/number format/.cd,
										fixed,
										precision=1
									}
									\def\tmin{0}	\def\tmax{0}
									\def\ymin{-2.5} \def\ymax{7}
									\def\tstep{0.2}	\def\ystep{0.5}
									\def\arrowscale{0.17} % length of slope arrows
									\def\segmentwt{1pt} % thickness of slope segments
									\def\eqpts{0, 4} % equilibrium points
									\def\testpts{-1, 1, 5} % test points for classification
									\def\arrowpts{-1, 1.5, 6} % test points for classification
									
									% stepsize along t-axis and y-axis
									\pgfmathsetmacro{\yL}{\ymin + \ystep}
									\pgfmathsetmacro{\yR}{\ymax - \ystep}
									\pgfmathsetmacro{\ny}{(\yR-\yL)/\ystep}

									% Axes
									\draw[->, thick] (0, \ymin) -- (0, \ymax+0.3)
										node[xshift= 0.05cm, yshift=-0.1cm, right, font=\scriptsize] {$y$};

									% Draw equilibrium points
									\foreach \eqpt in \eqpts {
										\draw[fill=white, thick] (0,\eqpt) circle (8pt);
										\draw[] (0,\eqpt) node[left, font=\scriptsize] {\eqpt};
									}

									% Draw phase arrows
									\foreach \arrowpt in \arrowpts {
										\pgfmathsetmacro{\slope}{f(0,\arrowpt)}
										\draw[teal!75, fill=white, line width=\segmentwt, arrows = {-Stealth[length=5pt, inset=0pt]}] (0,\arrowpt) -- (0,\arrowpt+0.01*\slope);
									}
								\end{tikzpicture}
							</latex-image>
						</image>
					</p>
				</sidebyside>

				<p>
					Now we can classify the equilibria based on the phase line:
					<ul>
						<li>Solutions divert away from <m>y(t) = 0</m>, so it is a <strong>source</strong>.</li>
						<li>Solutions converge toward <m>y(t) = 4</m>, so it is a <strong>sink</strong>.</li>
					</ul>
				</p>
			</solution>
		</example>
	</paragraphs>

	<paragraphs><title> Classification via the Linearization Method </title>
		<p>
			Another way to classify equilibrium solutions is by analyzing <m>f(y)</m> using a bit of calculus.
		</p>

		<p>
			Looking carefully at <xref ref="phase-line-plot"/>, you can see that the sign of <m>f(y)</m> before and after each equilibrium solution determines the direction of the arrows in the phase line. Moving vertically upward from the bottom of the phase line, we see that
		</p>

		<ul>
			<li>At the <strong>source</strong>, <m>y=-1</m>, <m>f(y)</m> goes from negative â†’ positive.</li>
			<li>At the <strong>sink</strong>, <m>y=1</m>, <m>f(y)</m> goes from positive â†’ negative.</li>
		</ul>

		<p>
			The important observation is that <m>f(y)</m> increases through sources and decreases through sinks. This is true in general, so we can classify equilibrium solutions by looking at the sign of <m>f'(y)</m> at the equilibrium points. 
		</p>

		<p>
			If <m>f(y_0) = 0</m>, then <m>y_0</m> is an equilibrium. To classify it:
		</p>

		<ul>
			<li>If <m>f'(y_0) &lt; 0</m>, then <m>f(y)</m> is decreasing â†’ sink.</li>
			<li>If <m>f'(y_0) &gt; 0</m>, then <m>f(y)</m> is increasing â†’ source.</li>
			<li>If <m>f'(y_0) = 0</m>, the test is inconclusiveâ€”we need to look more closely.</li>
		</ul>

		<p>
			This way of classifying equilibrium solution is known as the <term>linearization method</term>.
		</p>

		<sidebyside widths="39.5% 2% 58.5%">
			<figure>
				<image>
					<latex-image>
						\begin{tikzpicture}[declare function={f(\x,\y) = (1-\y) * (1+\y);}, scale=0.7]

							\pgfkeys{/pgf/number format/.cd,
								fixed,
								precision=1
							}
							\def\tmin{-2.2}	\def\tmax{2.2}
							\def\ymin{-2.2} \def\ymax{2.2}
							\def\tstep{0.2}	\def\ystep{0.2}
							\def\arrowscale{0.17} % length of slope arrows
							\def\segmentwt{0.8pt} % thickness of slope segments

							% stepsize along t-axis and y-axis
							\pgfmathsetmacro{\tL}{\tmin + \tstep}
							\pgfmathsetmacro{\tR}{\tmax - \tstep}
							\pgfmathsetmacro{\yL}{\ymin + \ystep}
							\pgfmathsetmacro{\yR}{\ymax - \ystep}
							\pgfmathsetmacro{\nt}{(\tR-\tL)/\tstep}
							\pgfmathsetmacro{\ny}{(\yR-\yL)/\ystep}

							\draw[white, fill=red!10] (\tmin,\ymin) rectangle (\tmax,-1);
							\draw[white, fill=green!80!black!10] (\tmin,-1) rectangle (\tmax,1);
							\draw[white, fill=red!10] (\tmin,1) rectangle (\tmax,\ymax);

							% Draw grid lines
							%\foreach \i in {0,...,\nt} {
							%	\pgfmathsetmacro{\tk}{\tL + \i * \tstep}
							%	\draw[thin, gray!50] (\tk, \ymin) -- (\tk, \ymax);
							%}
							%\foreach \j in {0,...,\ny} {
							%	\pgfmathsetmacro{\yk}{\yL + \j * \ystep}
							%	\draw[thin, gray!50] (\tmin, \yk) -- (\tmax, \yk);
							%}
							
							% Axes
							\draw[->] (\tmin, 0) -- (\tmax+0.3, 0) 
								node[xshift=-0.05cm, yshift=-0.05cm, font=\tiny, below] {$t$};
							\draw[->] (0, \ymin) -- (0, \ymax+0.3)
								node[xshift= 0.05cm, yshift=-0.1cm, font=\tiny, right] {$y$};

							% Bounding box
							\draw[gray!50] (\tmin,\ymin) rectangle (\tmax,\ymax);

							% Tick marks and labels on t-axis
							\pgfmathtruncatemacro{\tLint}{\tL}
							\pgfmathtruncatemacro{\tRint}{\tR}
							\foreach \t in {\tLint,...,\tRint} {
								\draw (\t,\ymin-0.06) -- (\t,\ymin+0.06)
								node[font=\tiny, below] {\t};
							}

							% Tick marks and labels on y-axis
							\pgfmathtruncatemacro{\yLint}{\yL}
							\pgfmathtruncatemacro{\yRint}{\yR}
							\foreach \y in {-2, -1, 1, 2}
								\draw (\tmin-0.06,\y) -- (\tmin+0.06,\y)
								node[font=\tiny, left] {\y};

							% slope field: just draw a vector at each point
							\foreach \i in {0,...,\nt}
							\foreach \j in {0,...,\ny}{

								\pgfmathsetmacro{\tpt}{\tL + \i * \tstep}
								\pgfmathsetmacro{\ypt}{\yL + \j * \ystep}
								\pgfmathsetmacro{\slope}{f(\tpt,\ypt)}

								% Normalize direction vector (1, slope) to fixed length
								\pgfmathsetmacro{\len}{sqrt(1 + (\slope)^2)}
								\pgfmathsetmacro{\dt}{\arrowscale / \len}
								\pgfmathsetmacro{\dy}{\arrowscale * \slope / \len}

								\draw[teal!75, line width=\segmentwt, shift={(\tpt,\ypt)}] (-0.5*\dt, -0.5*\dy) -- (0.5*\dt, 0.5*\dy);
								%\draw[fill=white!50] (\tpt,\ypt) circle (1.5pt);
							}
						\end{tikzpicture}
					</latex-image>
				</image>
				<caption></caption>
			</figure>
			<p/>
			<figure>
				<image>
					<latex-image>
						\begin{tikzpicture}[declare function={f(\x,\y) = (1-\y) * (1+\y);}, scale=0.8] 

							\def\xslantB{1.0} % slant in x-direction
							\def\yslantB{-0.5} % slant in y-direction
							
							% Isometric transformation with a stronger slant in x
							\begin{scope}[canvas is xy plane at z=0, yslant=\yslantB, xslant=\xslantB]
								\pgfkeys{/pgf/number format/.cd,
									fixed,
									precision=1
								}
								\def\tmin{0}	\def\tmax{2.2}
								\def\ymin{-2.2} \def\ymax{2.2}
								\def\tstep{0.2}	\def\ystep{0.2}
								\def\arrowscale{0.17} % length of slope arrows
								\def\segmentwt{0.8pt} % thickness of slope segments

								% stepsize along t-axis and y-axis
								\pgfmathsetmacro{\tL}{\tmin + \tstep}
								\pgfmathsetmacro{\tR}{\tmax - \tstep}
								\pgfmathsetmacro{\yL}{\ymin + \ystep}
								\pgfmathsetmacro{\yR}{\ymax - \ystep}
								\pgfmathsetmacro{\nt}{(\tR-\tL)/\tstep}
								\pgfmathsetmacro{\ny}{(\yR-\yL)/\ystep}

								\draw[white, fill=red!10] (\tmin,\ymin) rectangle (\tmax,-1);
								\draw[white, fill=green!80!black!10] (\tmin,-1) rectangle (\tmax,1);
								\draw[white, fill=red!10] (\tmin,1) rectangle (\tmax,\ymax);
								
								% Axes
								\draw[->] (\tmin, 0) -- (\tmax+0.3, 0) 
									node[xshift= 0.00cm, yshift= 0.00cm, font=\tiny, right] {$t$};
								\draw[->] (0, \ymin) -- (0, \ymax+0.3)
									node[xshift= 0.15cm, yshift=-0.15cm, font=\tiny, above] {$y$};

								% Bounding box
								\draw[gray!50] (\tmin,\ymin) rectangle (\tmax,\ymax);

								% Tick marks and labels on t-axis
								\pgfmathtruncatemacro{\tLint}{\tL}
								\pgfmathtruncatemacro{\tRint}{\tR}
								\foreach \t in {\tLint,...,\tRint} {
									\draw (\t,\ymin-0.06) -- (\t,\ymin+0.06)
									node[font=\tiny, below, xshift=-0.2cm, yshift=0.1cm] {\t};
								}

								% Tick marks and labels on y-axis
								\pgfmathtruncatemacro{\yLint}{\yL}
								\pgfmathtruncatemacro{\yRint}{\yR}
								\foreach \y in {-2, -1, 1, 2}
									\draw (\tmax-0.06,\y) -- (\tmax+0.06,\y)
									node[font=\tiny, right, xshift=-0.1cm, yshift=-0.1cm] {\y};

								% slope field: just draw a vector at each point
								\foreach \i in {0,...,\nt}
								\foreach \j in {0,...,\ny}{

									\pgfmathsetmacro{\tpt}{\tL + \i * \tstep}
									\pgfmathsetmacro{\ypt}{\yL + \j * \ystep}
									\pgfmathsetmacro{\slope}{f(\tpt,\ypt)}

									% Normalize direction vector (1, slope) to fixed length
									\pgfmathsetmacro{\len}{sqrt(1 + (\slope)^2)}
									\pgfmathsetmacro{\dt}{\arrowscale / \len}
									\pgfmathsetmacro{\dy}{\arrowscale * \slope / \len}

									\draw[teal!75, line width=\segmentwt, shift={(\tpt,\ypt)}] (-0.5*\dt, -0.5*\dy) -- (0.5*\dt, 0.5*\dy);
									%\draw[fill=white!50] (\tpt,\ypt) circle (1.5pt);
								}
								\draw[&lt;-] (\tmax + 0.35, -1.3+0.35) -- (\tmax + 0.5, -1.3+0.5) node[font=\tiny, xshift=-0.1cm, right] {source};
								\draw[&lt;-] (2.6, 0.75) -- (2.6 + 0.5, 0.75-0.5) node[font=\tiny, below, yshift=0.1cm] {sink};
								
							\end{scope}

							\def\xslantA{0.0} % slant in x-direction
							\def\yslantA{0.5} % slant in y-direction

							% Isometric transformation with a stronger slant in x
							\begin{scope}[canvas is xy plane at z=0, xslant=\xslantA, yslant=\yslantA]

								\def\ymin{-2.2} \def\ymax{2.2}
								\def\fmin{-1}	\def\fmax{1.6}
								\def\tstep{0.2}	\def\ystep{0.2}
								
								\draw[white, fill=red!10] (\ymin,0) rectangle (-1,1);
								\draw[white, fill=green!80!black!10] (-1,0) rectangle (1,1);
								\draw[white, fill=red!10] (1,0) rectangle (\ymax,1);

								% f(y) axis
								\draw[->] (\ymin, 0) -- (\ymax+0.3, 0);
								\draw[->] (0, \fmin) -- (0, \fmax+0.3) node[yshift=-0.1cm, font=\tiny, left] {$f(y)$};
								
								\draw[white] (-1, 1.0) node[black, xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {increasing $f$} -- (-1, 0);
								\draw[] (-1.6, 0.35) node[xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {negative};
								\draw[] (-1.6, 0.1) node[xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {slopes};

								\draw[] (0, 0.35) node[fill=green!80!black!10, inner sep = 1pt, xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {positive};
								\draw[] (0, 0.1) node[fill=green!80!black!10, inner sep = 1pt, xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {slopes};

								\draw[white] (1, 1.0) node[black, xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {decreasing $f$} -- (1, 0);
								\draw[] (1.6, 0.35) node[xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {negative};
								\draw[] (1.6, 0.1) node[xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {slopes};

								
								% Draw f(y) graph where f(y) positive
								\draw[black, thick, samples=100] 
									plot[domain=-1:1] (\x, {(1-\x) * (1+\x)});
								% Draw f(y) graph where f(y) nagative
								\draw[black, dashed, thick, samples=100] 
									plot[domain=-1.35:-1] (\x, {(1-\x) * (1+\x)});
								\draw[black, dashed, thick, samples=100] 
									plot[domain=1:1.5] (\x, {(1-\x) * (1+\x)});
								
							\end{scope}
						\end{tikzpicture}
					</latex-image>
				</image>
				<caption></caption>
			</figure>
		</sidebyside>
		
		<example>
			<statement>
				<p>
					Consider the autonomous equation
					<me>
						\frac{dy}{dt} = y^2 - 4y + 3.
					</me>
					Find and classify the equilibrium solutions using the linearization method.
				</p>
			</statement>
			<solution>
				<p>
					First, we find the equilibria by solving <m>f(y) = 0</m>:
					<me>
						f(y) = y^2 - 4y + 3 = (y - 1)(y - 3) = 0,
					</me>
					which gives us the equilibrium solutions: <m>y(t) = 1</m> and <m>y(t) = 3</m>.
				</p>
				<p>
					Next, we compute the derivative:
					<me>
						f'(y) = 2y - 4.
					</me>
					Now we evaluate <m>f'(y)</m> at each equilibrium:
					<ul>
						<li><m>f'(1) = 2(1) - 4 = -2</m> â†’ <strong>sink</strong>.</li>
						<li><m>f'(3) = 2(3) - 4 = 2</m> â†’ <strong>source</strong>.</li>
					</ul>
					So <m>y = 1</m> is stable (sink), and <m>y = 3</m> is unstable (source).
				</p>
			</solution>
		</example>
		
	</paragraphs>

	<conclusion><title> ðŸ“¤ Wrap-Up </title>
		<paragraphs><title> Summary </title>
			<p>
				<ul>
					<li>Equilibrium solutions occur where <m>y' = f(y) = 0</m>.</li>
					<li>Sinks attract nearby solutions; sources repel them; nodes do both.</li>
					<li>Phase lines summarize this behavior with a clean visual.</li>
					<li>The derivative <m>f'(y)</m> near an equilibrium can classify stability using linearization.</li>
				</ul>
			</p>
		</paragraphs>

		<paragraphs><title> Reading Questions </title>

			<exercise><title> Answer the Following </title>
				<task><title> Stability Check </title>
					<statement>
						<p>
							Consider the autonomous equation
							<me>
								\frac{dy}{dt} = (y - 2)(y + 1).
							</me>
							Which of the following best describes the equilibrium at <m>y = 2</m>?
						</p>
					</statement>
					<choices>
						<choice correct="yes"><statement>Stable (sink)</statement></choice>
						<choice correct="no"><statement>Unstable (source)</statement></choice>
						<choice correct="no"><statement>Semi-stable (node)</statement></choice>
						<choice correct="no"><statement>Not an equilibrium solution</statement></choice>
					</choices>
				</task>

				<task><title> Phase Line Practice </title>
					<statement>
						<p>
							Sketch a phase line for the equation
							<me>
								\frac{dy}{dt} = y(3 - y^2).
							</me>
							Then classify each equilibrium solution as a sink, source, or node.
						</p>
					</statement>
				</task>
			</exercise>
		</paragraphs>
	</conclusion>
</section>