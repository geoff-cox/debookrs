<section><title> Classifying Equilibrium Solutions </title>
	<introduction>
		<p>
			Equilibrium solutions mark the places where a system comes to rest. But not all equilibrium points are alikeâ€”some attract nearby solutions, others repel them, and some do a bit of both. In this section, weâ€™ll learn how to classify these points by examining the slope field, the sign of <m>f(y)</m>, and a one-dimensional tool called a <term>phase line</term>.
		</p>
	</introduction>

	<subsection><title> Phase Lines </title>
		<introduction>
			<p>
				To classify an equilibrium solution, we ask a simple question: what happens to nearby solutions over time?
			</p>
		</introduction>

		<paragraphs><title> Types of Equilibrium </title>

			<p>
				Suppose <m>y = c</m> is an equilibrium solution of an autonomous equation <m>dy/dt = f(y)</m>. If a solution starts slightly above or below <m>c</m>, it will either move toward <m>c</m>, move away from <m>c</m>, or behave differently on either side.
			</p>

			<p>
				Here are the three most common types:
			</p>

			<ul>
				<li><strong>Stable (sink):</strong> Nearby solutions move <em>toward</em> the equilibrium from both sides.</li>
				<li><strong>Unstable (source):</strong> Nearby solutions move <em>away</em> from the equilibrium on both sides.</li>
				<li><strong>Semi-stable (node):</strong> Solutions approach from one side and move away on the other.</li>
			</ul>

			<p>
				In the slope field, a sink looks like arrows converging toward a horizontal line. A source looks like arrows diverging away. And a node has a mix: converging from one side, diverging from the other. We'll see how to identify each of these from the function <m>f(y)</m> or its graph.
			</p>
		</paragraphs>

		<paragraphs><title> The Phase Line </title>

			<p>
				Slope fields are powerful but can get cluttered. Since autonomous equations have horizontal strip symmetry, we can compress all the slope information into a vertical number line showing only <m>y</m>-values. This diagram is called a <term>phase line</term>.
			</p>

			<p>
				On a phase line:
			</p>

			<ul>
				<li>Equilibrium points are marked with solid dots.</li>
				<li>Regions where <m>f(y) &gt; 0</m> are marked with upward arrows.</li>
				<li>Regions where <m>f(y) &lt; 0</m> are marked with downward arrows.</li>
			</ul>

			<p>
				The arrows show how <m>y(t)</m> changes over time: whether it increases or decreases in each region. Following the arrows tells you where solutions go in the long run.
			</p>

			<p>[Insert phase line diagram here]</p>
		</paragraphs>

		<paragraphs><title> Example: Growth and Decay </title>

			<p>
				Letâ€™s try this on an example:
				<me>
					\frac{dy}{dt} = y^2 - 4y = y(y - 4).
				</me>
				Setting <m>f(y) = 0</m>, we find equilibrium points at <m>y = 0</m> and <m>y = 4</m>.
			</p>

			<p>
				Now divide the <m>y</m>-axis into three regions:
			</p>

			<ul>
				<li><m>y &lt; 0</m>: both factors are negative, so <m>f(y) &gt; 0</m> â†’ solutions increase.</li>
				<li><m>0 &lt; y &lt; 4</m>: one factor positive, one negative â†’ <m>f(y) &lt; 0</m> â†’ solutions decrease.</li>
				<li><m>y &gt; 4</m>: both factors positive â†’ <m>f(y) &gt; 0</m> â†’ solutions increase.</li>
			</ul>

			<p>
				This produces the phase line:
			</p>

			<ul>
				<li><m>y = 0</m>: arrows point away â†’ <strong>source</strong>.</li>
				<li><m>y = 4</m>: arrows point toward â†’ <strong>sink</strong>.</li>
			</ul>

			<p>[Insert slope field and phase line visuals here]</p>
		</paragraphs>

		<conclusion><title> ðŸ“¤ Wrap-Up </title>

			<paragraphs><title> Summary </title>
				<p>
					<ul>
						<li>Equilibrium solutions occur where <m>dy/dt = f(y) = 0</m>.</li>
						<li>Sinks attract nearby solutions; sources repel them; nodes do both.</li>
						<li>Phase lines summarize this behavior with a clean visual.</li>
					</ul>
				</p>
			</paragraphs>

			<paragraphs><title> Reading Questions </title>

				<exercise><title> Stability Check </title>
					<statement>
						<p>
							Consider the autonomous equation
							<me>
								\frac{dy}{dt} = (y - 2)(y + 1).
							</me>
							Which of the following best describes the equilibrium at <m>y = 2</m>?
						</p>
					</statement>
					<choices>
						<choice correct="yes"><statement>Stable (sink)</statement></choice>
						<choice correct="no"><statement>Unstable (source)</statement></choice>
						<choice correct="no"><statement>Semi-stable (node)</statement></choice>
						<choice correct="no"><statement>Not an equilibrium point</statement></choice>
					</choices>
				</exercise>

				<exercise><title> Phase Line Practice </title>
					<statement>
						<p>
							Sketch a phase line for the equation
							<me>
								\frac{dy}{dt} = y(3 - y^2).
							</me>
							Then classify each equilibrium point as a sink, source, or node.
						</p>
					</statement>
				</exercise>

			</paragraphs>

		</conclusion>
	</subsection>
	
	<subsection><title> Linearization Method </title>
		<paragraphs><title> Using the Graph of <m>f(y)</m> </title>

			<p>
				What if we donâ€™t have the formula for <m>f(y)</m>â€”only a graph? No problem! You can still identify equilibria and classify them using the shape of the graph.
			</p>

			<p>
				Equilibrium points are where the graph of <m>f(y)</m> crosses the <m>y</m>-axis. To classify them:
			</p>

			<ul>
				<li>If the graph crosses from positive to negative, itâ€™s a <strong>sink</strong>.</li>
				<li>If the graph crosses from negative to positive, itâ€™s a <strong>source</strong>.</li>
				<li>If the graph just touches the axis and turns around, itâ€™s a <strong>node</strong>.</li>
			</ul>

			<p>
				This trick lets you classify equilibria even for messy or piecewise-defined equationsâ€”just look at the graph of <m>f(y)</m>.
			</p>

					<sidebyside widths="39.5% 2% 58.5%">
				<figure>
					<image>
						<latex-image>
							\begin{tikzpicture}[declare function={f(\x,\y) = (1-\y) * (1+\y);}, scale=0.7]

								\pgfkeys{/pgf/number format/.cd,
									fixed,
									precision=1
								}
								\def\tmin{-2.2}	\def\tmax{2.2}
								\def\ymin{-2.2} \def\ymax{2.2}
								\def\tstep{0.2}	\def\ystep{0.2}
								\def\arrowscale{0.17} % length of slope arrows
								\def\segmentwt{0.8pt} % thickness of slope segments

								% stepsize along t-axis and y-axis
								\pgfmathsetmacro{\tL}{\tmin + \tstep}
								\pgfmathsetmacro{\tR}{\tmax - \tstep}
								\pgfmathsetmacro{\yL}{\ymin + \ystep}
								\pgfmathsetmacro{\yR}{\ymax - \ystep}
								\pgfmathsetmacro{\nt}{(\tR-\tL)/\tstep}
								\pgfmathsetmacro{\ny}{(\yR-\yL)/\ystep}

								\draw[white, fill=red!10] (\tmin,\ymin) rectangle (\tmax,-1);
								\draw[white, fill=green!80!black!10] (\tmin,-1) rectangle (\tmax,1);
								\draw[white, fill=red!10] (\tmin,1) rectangle (\tmax,\ymax);

								% Draw grid lines
								%\foreach \i in {0,...,\nt} {
								%	\pgfmathsetmacro{\tk}{\tL + \i * \tstep}
								%	\draw[thin, gray!50] (\tk, \ymin) -- (\tk, \ymax);
								%}
								%\foreach \j in {0,...,\ny} {
								%	\pgfmathsetmacro{\yk}{\yL + \j * \ystep}
								%	\draw[thin, gray!50] (\tmin, \yk) -- (\tmax, \yk);
								%}
								
								% Axes
								\draw[->] (\tmin, 0) -- (\tmax+0.3, 0) 
									node[xshift=-0.05cm, yshift=-0.05cm, font=\tiny, below] {$t$};
								\draw[->] (0, \ymin) -- (0, \ymax+0.3)
									node[xshift= 0.05cm, yshift=-0.1cm, font=\tiny, right] {$y$};

								% Bounding box
								\draw[gray!50] (\tmin,\ymin) rectangle (\tmax,\ymax);

								% Tick marks and labels on t-axis
								\pgfmathtruncatemacro{\tLint}{\tL}
								\pgfmathtruncatemacro{\tRint}{\tR}
								\foreach \t in {\tLint,...,\tRint} {
									\draw (\t,\ymin-0.06) -- (\t,\ymin+0.06)
									node[font=\tiny, below] {\t};
								}

								% Tick marks and labels on y-axis
								\pgfmathtruncatemacro{\yLint}{\yL}
								\pgfmathtruncatemacro{\yRint}{\yR}
								\foreach \y in {-2, -1, 1, 2}
									\draw (\tmin-0.06,\y) -- (\tmin+0.06,\y)
									node[font=\tiny, left] {\y};

								% slope field: just draw a vector at each point
								\foreach \i in {0,...,\nt}
								\foreach \j in {0,...,\ny}{

									\pgfmathsetmacro{\tpt}{\tL + \i * \tstep}
									\pgfmathsetmacro{\ypt}{\yL + \j * \ystep}
									\pgfmathsetmacro{\slope}{f(\tpt,\ypt)}

									% Normalize direction vector (1, slope) to fixed length
									\pgfmathsetmacro{\len}{sqrt(1 + (\slope)^2)}
									\pgfmathsetmacro{\dt}{\arrowscale / \len}
									\pgfmathsetmacro{\dy}{\arrowscale * \slope / \len}

									\draw[teal!75, line width=\segmentwt, shift={(\tpt,\ypt)}] (-0.5*\dt, -0.5*\dy) -- (0.5*\dt, 0.5*\dy);
									%\draw[fill=white!50] (\tpt,\ypt) circle (1.5pt);
								}
							\end{tikzpicture}
						</latex-image>
					</image>
					<caption></caption>
				</figure>
				<p/>
				<figure>
					<image>
						<latex-image>
							\begin{tikzpicture}[declare function={f(\x,\y) = (1-\y) * (1+\y);}, scale=0.8]

								\def\xslantB{1.0} % slant in x-direction
								\def\yslantB{-0.5} % slant in y-direction
								
								% Isometric transformation with a stronger slant in x
								\begin{scope}[canvas is xy plane at z=0, yslant=\yslantB, xslant=\xslantB]
									\pgfkeys{/pgf/number format/.cd,
										fixed,
										precision=1
									}
									\def\tmin{0}	\def\tmax{2.2}
									\def\ymin{-2.2} \def\ymax{2.2}
									\def\tstep{0.2}	\def\ystep{0.2}
									\def\arrowscale{0.17} % length of slope arrows
									\def\segmentwt{0.8pt} % thickness of slope segments

									% stepsize along t-axis and y-axis
									\pgfmathsetmacro{\tL}{\tmin + \tstep}
									\pgfmathsetmacro{\tR}{\tmax - \tstep}
									\pgfmathsetmacro{\yL}{\ymin + \ystep}
									\pgfmathsetmacro{\yR}{\ymax - \ystep}
									\pgfmathsetmacro{\nt}{(\tR-\tL)/\tstep}
									\pgfmathsetmacro{\ny}{(\yR-\yL)/\ystep}

									\draw[white, fill=red!10] (\tmin,\ymin) rectangle (\tmax,-1);
									\draw[white, fill=green!80!black!10] (\tmin,-1) rectangle (\tmax,1);
									\draw[white, fill=red!10] (\tmin,1) rectangle (\tmax,\ymax);

									% Draw grid lines
									%\foreach \i in {0,...,\nt} {
									%	\pgfmathsetmacro{\tk}{\tL + \i * \tstep}
									%	\draw[thin, gray!50] (\tk, \ymin) -- (\tk, \ymax);
									%}
									%\foreach \j in {0,...,\ny} {
									%	\pgfmathsetmacro{\yk}{\yL + \j * \ystep}
									%	\draw[thin, gray!50] (\tmin, \yk) -- (\tmax, \yk);
									%}
									
									% Axes
									\draw[->] (\tmin, 0) -- (\tmax+0.3, 0) 
										node[xshift= 0.00cm, yshift= 0.00cm, font=\tiny, right] {$t$};
									\draw[->] (0, \ymin) -- (0, \ymax+0.3)
										node[xshift= 0.15cm, yshift=-0.15cm, font=\tiny, above] {$y$};

									% Bounding box
									\draw[gray!50] (\tmin,\ymin) rectangle (\tmax,\ymax);

									% Tick marks and labels on t-axis
									\pgfmathtruncatemacro{\tLint}{\tL}
									\pgfmathtruncatemacro{\tRint}{\tR}
									\foreach \t in {\tLint,...,\tRint} {
										\draw (\t,\ymin-0.06) -- (\t,\ymin+0.06)
										node[font=\tiny, below, xshift=-0.2cm, yshift=0.1cm] {\t};
									}

									% Tick marks and labels on y-axis
									\pgfmathtruncatemacro{\yLint}{\yL}
									\pgfmathtruncatemacro{\yRint}{\yR}
									\foreach \y in {-2, -1, 1, 2}
										\draw (\tmax-0.06,\y) -- (\tmax+0.06,\y)
										node[font=\tiny, right, xshift=-0.1cm, yshift=-0.1cm] {\y};

									% slope field: just draw a vector at each point
									\foreach \i in {0,...,\nt}
									\foreach \j in {0,...,\ny}{

										\pgfmathsetmacro{\tpt}{\tL + \i * \tstep}
										\pgfmathsetmacro{\ypt}{\yL + \j * \ystep}
										\pgfmathsetmacro{\slope}{f(\tpt,\ypt)}

										% Normalize direction vector (1, slope) to fixed length
										\pgfmathsetmacro{\len}{sqrt(1 + (\slope)^2)}
										\pgfmathsetmacro{\dt}{\arrowscale / \len}
										\pgfmathsetmacro{\dy}{\arrowscale * \slope / \len}

										\draw[teal!75, line width=\segmentwt, shift={(\tpt,\ypt)}] (-0.5*\dt, -0.5*\dy) -- (0.5*\dt, 0.5*\dy);
										%\draw[fill=white!50] (\tpt,\ypt) circle (1.5pt);
									}
								\end{scope}

								\def\xslantA{0.0} % slant in x-direction
								\def\yslantA{0.5} % slant in y-direction

								% Isometric transformation with a stronger slant in x
								\begin{scope}[canvas is xy plane at z=0, xslant=\xslantA, yslant=\yslantA]

									\def\ymin{-2.2} \def\ymax{2.2}
									\def\fmin{-1}	\def\fmax{1.6}
									\def\tstep{0.2}	\def\ystep{0.2}
									
									\draw[white, fill=red!10] (\ymin,0) rectangle (-1,1);
									\draw[white, fill=green!80!black!10] (-1,0) rectangle (1,1);
									\draw[white, fill=red!10] (1,0) rectangle (\ymax,1);

									% f(y) axis
									\draw[->] (\ymin, 0) -- (\ymax+0.3, 0);
									\draw[->] (0, \fmin) -- (0, \fmax+0.3) node[yshift=-0.1cm, font=\tiny, left] {$f(y)$};
									
									\draw[white] (-1, 1.0) node[black, xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {increasing $f$} -- (-1, 0);
									\draw[] (-1.6, 0.35) node[xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {negative};
									\draw[] (-1.6, 0.1) node[xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {slopes};

									\draw[] (0, 0.35) node[fill=green!80!black!10, inner sep = 1pt, xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {positive};
									\draw[] (0, 0.1) node[fill=green!80!black!10, inner sep = 1pt, xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {slopes};

									\draw[white] (1, 1.0) node[black, xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {decreasing $f$} -- (1, 0);
									\draw[] (1.6, 0.35) node[xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {negative};
									\draw[] (1.6, 0.1) node[xslant=\xslantA, yslant=\yslantA, font=\tiny, above] {slopes};

									
									\def\yo{1}
									\draw[magenta, thick, samples=100] 
										plot[domain=-1.5:1.5] (\x, {(1-\x) * (1+\x)});
									
								\end{scope}
							\end{tikzpicture}
						</latex-image>
					</image>
					<caption></caption>
				</figure>
			</sidebyside>
		</paragraphs>

		<paragraphs><title> The Linearization Shortcut </title>

			<p>
				If you do have a formula for <m>f(y)</m>, there's an even faster way to classify equilibrium pointsâ€”using calculus.
			</p>

			<p>
				If <m>f(y_0) = 0</m>, then <m>y_0</m> is an equilibrium. To classify it:
			</p>

			<ul>
				<li>If <m>f'(y_0) &lt; 0</m>, then <m>f(y)</m> is decreasing â†’ sink.</li>
				<li>If <m>f'(y_0) &gt; 0</m>, then <m>f(y)</m> is increasing â†’ source.</li>
				<li>If <m>f'(y_0) = 0</m>, the test is inconclusiveâ€”we need to look more closely.</li>
			</ul>

			<p>
				This method is called <term>linearization</term>. Near an equilibrium, the nonlinear function behaves like a straight line. So we analyze the linear approximation to understand local behavior.
			</p>

			<p>
				Letâ€™s try it. For
				<me>
					f(y) = y^2 - 4y + 3,
				</me>
				the equilibria are <m>y = 1</m> and <m>y = 3</m>. Then
				<me>
					f'(y) = 2y - 4.
				</me>
				We compute:
			</p>

			<ul>
				<li><m>f'(1) = -2</m> â†’ sink.</li>
				<li><m>f'(3) = 2</m> â†’ source.</li>
			</ul>

			<p>
				So <m>y = 1</m> is stable, and <m>y = 3</m> is unstable.
			</p>
		</paragraphs>

		<paragraphs><title> Summary of Strategy </title>

			<p>
				To classify equilibrium points in an autonomous equation <m>dy/dt = f(y)</m>:
			</p>

			<ol>
				<li>Solve <m>f(y) = 0</m> to find equilibria.</li>
				<li>Use a sign chart, graph, or derivative test to determine the sign of <m>f(y)</m> near each point.</li>
				<li>Draw a phase line to visualize arrows and classify each point as a sink, source, or node.</li>
			</ol>

			<p>
				Whether you're working from a formula, a graph, or a slope field, the strategy is the same: find the zeros of <m>f(y)</m> and figure out which way solutions are heading. The phase line ties it all together.
			</p>
		</paragraphs>

		<conclusion><title> ðŸ“¤ Wrap-Up </title>

			<paragraphs><title> Summary </title>
				<p>
					<ul>
						<li>The derivative <m>f'(y)</m> near an equilibrium can classify stability using linearization.</li>
					</ul>
				</p>
			</paragraphs>

			<paragraphs><title> Reading Questions </title>

				<exercise><title> Stability Check </title>
					<statement>
						<p>
							Consider the autonomous equation
							<me>
								\frac{dy}{dt} = (y - 2)(y + 1).
							</me>
							Which of the following best describes the equilibrium at <m>y = 2</m>?
						</p>
					</statement>
					<choices>
						<choice correct="yes"><statement>Stable (sink)</statement></choice>
						<choice correct="no"><statement>Unstable (source)</statement></choice>
						<choice correct="no"><statement>Semi-stable (node)</statement></choice>
						<choice correct="no"><statement>Not an equilibrium point</statement></choice>
					</choices>
				</exercise>

				<exercise><title> Phase Line Practice </title>
					<statement>
						<p>
							Sketch a phase line for the equation
							<me>
								\frac{dy}{dt} = y(3 - y^2).
							</me>
							Then classify each equilibrium point as a sink, source, or node.
						</p>
					</statement>
				</exercise>

			</paragraphs>

		</conclusion>
	</subsection>


</section>